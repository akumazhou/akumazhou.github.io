[{"categories":null,"content":"黑群晖 Active Backup for Business 套件激活方法","date":"2024-03-25","objectID":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/","series":null,"tags":["Synology"],"title":"黑群晖 Active Backup for Business 套件激活方法","uri":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/"},{"categories":null,"content":"黑群晖 Active Backup for Business 套件激活方法 首先我们先安装好Active Backup for Business套件 这时候打开会显示需要激活 我们到【控制面板】 - 【信息中心】 找到【产品序列号】并记下来 ","date":"2024-03-25","objectID":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/:0:0","series":null,"tags":["Synology"],"title":"黑群晖 Active Backup for Business 套件激活方法","uri":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/#"},{"categories":null,"content":"\r群晖6.X激活方法如下：浏览器输入如下地址，显示如下信息即可进行下一步：（IP地址替换为NAS的地址，登陆用户名和登陆密码就是你登陆群晖的时候所使用的） 群晖默认https端口为5001而不是443 https://IP地址:5001/webapi/auth.cgi?api=SYNO.API.Auth\u0026method=Login\u0026version=1\u0026account=登陆用户名\u0026passwd=登陆密码 浏览器输入如下地址，显示如下信息即可进行下一步：（IP地址替换为NAS的地址，序列号就是刚才信息中心的产品序列号） https://IP地址:5001/webapi/entry.cgi?api=SYNO.ActiveBackup.Activation\u0026method=set\u0026version=1\u0026activated=true\u0026serial_number=\"序列号\" 这样我们就完成了Active Backup for Business套件的激活，打开正常 内网连接一下，没有问题 接下来就是一个要非常注意的问题了，黑群用户由于没有QC所以需要做端口映射或者内网穿透才能在公网访问到NAS 这里大家注意，一定要把 5510 端口映射（TCP）出去，要不你在外网的机器上使用Active Backup for Business套件连接NAS的时候会提示没有网络连接 如果你使用的frp进行内网穿透的话，客户端就需要如下配置，有公网IP的用户直接在路由器上做端口映射就行了 这样我们就可以在公网连接使用Active Backup for Business套件了 这样我们就完成了黑群晖 Active Backup for Business 套件的激活，并且在内网和公网都能够正常连接 ","date":"2024-03-25","objectID":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/:1:0","series":null,"tags":["Synology"],"title":"黑群晖 Active Backup for Business 套件激活方法","uri":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/#群晖6x激活方法如下"},{"categories":null,"content":"\r群晖7.X激活方法如下： https://群晖地址:5001/webapi/auth.cgi?api=SYNO.API.Auth\u0026version=3\u0026method=login\u0026account=管理员用户名\u0026passwd=密码\u0026format= cookie 然后网页提示中有\"success\":ture字样就是OK了 注意： 1、群晖的https是5001端口 2、密码中只包含字母和数字，如果存在特殊符号，大概需要转换，按哪个标准我就不知道了 ​ 懒得纠结的就去把密码改一下，回头改回来就行 3、cookie前有个空格，别忘了 然后在网页中输入以下网址： https://群晖地址:5001/webapi/entry.cgi?api=SYNO.ActiveBackup.Activation\u0026method=set\u0026version=1\u0026activated=true\u0026serial_number=\"序列号\" 将网址中的地址和序列号替换 当success为true同时activated为true时说明激活成功，进入DSM，ABB顺利打开 ","date":"2024-03-25","objectID":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/:2:0","series":null,"tags":["Synology"],"title":"黑群晖 Active Backup for Business 套件激活方法","uri":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/#群晖7x激活方法如下"},{"categories":null,"content":"\r在线激活：http://mi-d.cn/d/ABB.html 支持浏览器firefox、theworld6、theworld7 其他浏览器不支持 ","date":"2024-03-25","objectID":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/:3:0","series":null,"tags":["Synology"],"title":"黑群晖 Active Backup for Business 套件激活方法","uri":"/%E9%BB%91%E7%BE%A4%E6%99%96-active-backup-for-business-%E5%A5%97%E4%BB%B6%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/#在线激活"},{"categories":null,"content":"Windows自动登录","date":"2024-01-18","objectID":"/win10%E5%92%8C11%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/","series":null,"tags":["WINDOWS技巧"],"title":"Windows自动登录","uri":"/win10%E5%92%8C11%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/"},{"categories":null,"content":"\r一.设置自动登录的方法找到运行窗口后输入control userpasswords2或者netplwiz代码并按下回车键 图片1\r在跳转界面中点击用户属性一览，如下图所示取消对用户名密码输入的勾选 图片2\r点击保存后即可看到系统已经设置为自动登录效果 图片3\r","date":"2024-01-18","objectID":"/win10%E5%92%8C11%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/:1:0","series":null,"tags":["WINDOWS技巧"],"title":"Windows自动登录","uri":"/win10%E5%92%8C11%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/#一设置自动登录的方法"},{"categories":null,"content":"\r二.没有“使用本计算机,用户必须输入用户名和密码”选项的解决办法　要实现Win10自动登录，通常办法是按win+r，输入netplwiz或是control userpasswords2 回车，调出用户帐号界面，把“要使用本计算机，用户必须输入用户名和密码”前面的勾去掉，输入帐号密码。 但有些电脑，会出现“要使用本计算机，用户必须输入用户名和密码”选项不见的情况 图片4\r解决方法，桌面新建文本文件，输入以下文字 Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\PasswordLess\\Device]; “DevicePasswordLessBuildVersion”=dword:00000002 “DevicePasswordLessBuildVersion”=dword:00000000 然后另存为“恢复.reg”，双击，点“是”确认(注意扩展名不是txt) 图片5\r也可以按按win+r，输入regedit，回车，然后在注册表中修改相应的值，其原始值是2，改为0即可。 图片6\r","date":"2024-01-18","objectID":"/win10%E5%92%8C11%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/:2:0","series":null,"tags":["WINDOWS技巧"],"title":"Windows自动登录","uri":"/win10%E5%92%8C11%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/#二没有使用本计算机用户必须输入用户名和密码选项的解决办法"},{"categories":null,"content":"手把手教你安装1Panel,一个现代化开源的服务器管理面板","date":"2023-11-29","objectID":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/","series":null,"tags":["1Panel"],"title":"手把手教你安装1Panel,一个现代化开源的服务器管理面板","uri":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/"},{"categories":null,"content":"\r1.进入官网GitHub - 1Panel-dev/1Panel: 🔥 🔥 🔥 现代化、开源的 Linux 服务器运维管理面板。 ","date":"2023-11-29","objectID":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/:0:0","series":null,"tags":["1Panel"],"title":"手把手教你安装1Panel,一个现代化开源的服务器管理面板","uri":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/#1进入官网"},{"categories":null,"content":"\r2.一键安装 curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh \u0026\u0026 sudo bash quick_start.sh 执行中,可以看到会自动安装docker-compose和docker 安装完后访问即可,注意http协议: ","date":"2023-11-29","objectID":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/:0:0","series":null,"tags":["1Panel"],"title":"手把手教你安装1Panel,一个现代化开源的服务器管理面板","uri":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/#2一键安装"},{"categories":null,"content":"\r1 1pctl1Panel 默认内置了命令行运维工具 1pctl，通过执行 1pctl help，可以查看相关的命令说明。 Usage: 1pctl [COMMAND] [ARGS...] 1pctl --help Commands: status 查看 1Panel 服务运行状态 start 启动 1Panel 服务 stop 停止 1Panel 服务 restart 重启 1Panel 服务 uninstall 卸载 1Panel 服务 user-info 获取 1Panel 用户信息 version 查看 1Panel 版本信息 reset 重置 1Panel 系统信息 ","date":"2023-11-29","objectID":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/:1:0","series":null,"tags":["1Panel"],"title":"手把手教你安装1Panel,一个现代化开源的服务器管理面板","uri":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/#1-1pctl"},{"categories":null,"content":"\r2 1pctl reset重置 1Panel 系统信息，包括取消安全入口登录，取消两步验证等 Usage: 1pctl reset [COMMAND] [ARGS...] 1pctl reset --help Commands: domain 取消 1Panel 访问域名绑定 entrance 取消 1Panel 安全入口 https 取消 1Panel https 方式登录 ips 取消 1Panel 授权 IP 限制 mfa 取消 1Panel 两步验证 ———————————————— 版权声明：本文为CSDN博主「生生世世是所说的」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。 原文链接：https://blog.csdn.net/qq_42901723/article/details/132641580 ","date":"2023-11-29","objectID":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/:2:0","series":null,"tags":["1Panel"],"title":"手把手教你安装1Panel,一个现代化开源的服务器管理面板","uri":"/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AE%89%E8%A3%851panel%E4%B8%80%E4%B8%AA%E7%8E%B0%E4%BB%A3%E5%8C%96%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BF/#2-1pctl-reset"},{"categories":null,"content":"Github Desktop设置汉化","date":"2023-11-28","objectID":"/githubdesktop%E8%AE%BE%E7%BD%AE%E6%B1%89%E5%8C%96/","series":null,"tags":["Github"],"title":"Github Desktop设置汉化","uri":"/githubdesktop%E8%AE%BE%E7%BD%AE%E6%B1%89%E5%8C%96/"},{"categories":null,"content":"\r汉化步骤： 1.访问https://desktop.github.com/，下载GitHubDesktop安装程序。 2.安装完成之后删除安装包 3.访问https://github.com/robotze/-GitHubDesktop_ZH，下载中文汉化包。 4.解压GithubDesktop汉化工具.7z，执行GithubDesktopZhTool.exe程序 5点击汉化工具左上角 汉化即可 ","date":"2023-11-28","objectID":"/githubdesktop%E8%AE%BE%E7%BD%AE%E6%B1%89%E5%8C%96/:1:0","series":null,"tags":["Github"],"title":"Github Desktop设置汉化","uri":"/githubdesktop%E8%AE%BE%E7%BD%AE%E6%B1%89%E5%8C%96/#汉化步骤"},{"categories":["Hugo安装\u0026基本配置"],"content":"从0开始搭建hugo博客","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r实验环境 win10 git version 2.17.0.windows.1 hugo v0.98.0 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:1:0","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#实验环境"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rhugo官网https://gohugo.io/ ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:2:0","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#hugo官网"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rhugo安装","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:3:0","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#hugo安装"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r1.安装git实战：git安装 ———————————————— 版权声明：本文为CSDN博主「一念一生～one」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。 原文链接：https://blog.csdn.net/weixin_39246554/article/details/124573538 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:3:1","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#1安装git"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r2.安装hugo 打开hugo下载链接，直接下载go二进制安装包： https://github.com/gohugoio/hugo/releases/download/v0.102.3/hugo_extended_0.102.3_Windows-64bit.zip 将下载的go二进制安装包放到自己电脑某个目录下，然后将其路径放到自己电脑的环境变量下(自己配置目录为D:\\SoftInstall\\hugo) 配置环境变量具体步骤如下： win + R，输入：sysdm.cpl快速打开pc的环境变量配置： 1.点击高级 2.环境变 3.找到Path那一行，点击编辑 4.点击新建，然后输入刚才下载的二进制目录所在路径(自己配置目录为D:\\SoftInstall\\hugo)，点击确认： 5.全部确认即可 至此，hugo的环境变量就配置好了，我们打开cmd，输入hugo version查看是否有效果： 有结果输出，表示hugo安装正常。 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:3:2","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#2安装hugo"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r3.本地预览 1.创建本地站点根目录 打开Git Bash，来到D:\\目录下，然后输入如下命令，进行创建本地站点根目录：（运行$后的代码） $ hugo new site hugoblog Congratulations! Your new Hugo site is created in D:\\hugoblog. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \"hugo new theme \u003cTHEMENAME\u003e\" command. 2. Perhaps you want to add some content. You can add single files with \"hugo new \u003cSECTIONNAME\u003e\\\u003cFILENAME\u003e.\u003cFORMAT\u003e\". 3. Start the built-in live server via \"hugo server\". Visit https://gohugo.io/ for quickstart guide and full documentation. hg@LAPTOP-G8TUFE0T MINGW64 /d $ cd hugoblog/ hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog $ ls archetypes/ config.toml content/ data/ layouts/ public/ static/ themes/ hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog 2.下载hugo主题 因为hugo没有内置主题，所以你需要去下载一个： 配置文件为：hugo.toml hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog $ git clone https://github.com/reuixiy/hugo-theme-meme.git themes/meme Cloning into 'themes/meme'... remote: Enumerating objects: 5583, done. remote: Counting objects: 100% (740/740), done. remote: Compressing objects: 100% (289/289), done. remote: Total 5583 (delta 507), reused 451 (delta 451), pack-reused 4843 Receiving objects: 100% (5583/5583), 9.31 MiB | 12.59 MiB/s, done. Resolving deltas: 100% (3086/3086), done. hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog $ rm config.toml \u0026\u0026 cp themes/meme/config-examples/en/config.toml hugo.toml 继续按说明添加那两个页面： hugo new \"posts/hello-world.md\" hugo new \"about/_index.md\" 然后将上述两个文件中的草稿字段（ draft ）改为 false： title: \"Hello World\" date: 2021-07-20T01:53:48Z draft: false 3.创建第一个测试文件 hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog $ hugo new posts/first.md Content \"D:\\\\hugoblog\\\\content\\\\post\\\\first.md\" created hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog $ echo \"i love you,xyy hurt!\" \u003e\u003e content/post/first.md 🍀 说明 hugo new [路径]文章名.md hugo new会创建包含默认元数据的文章，如果没有路径, 文章会保存在content目录中。 md的文章会在开始部分添加元数据, 数据格式为 yaml toml json格式如下: +++ title = \"my first blog\" date = \"2019-10-28T09:38:35+08:00\" draft = true +++ markdownz正文部分\u003e\u003e\u003e PS: draft=true表示文章默认为草稿 draft=false 才能识别非草稿 4.本地预览 $ hugo server -v -D #hugo -d 目标路径 不指定目标路径, 会默认在public目录下生成可部署的网站. 我们通过hugo server -D本地生成网站预览. 他会监控页面的更改, 并刷新页面. 在浏览器打开如下链接，http://localhost:1313/ 观察效果： 完美。😘 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:3:3","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#3本地预览"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r推送到github并设置公网可访问","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:0","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#推送到github并设置公网可访问"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r1.github上创建仓库登录github：https://github.com/ 点击Your repositories： 点击new： 填写仓库名，选择Public，添加一个Readme文件： 点击Create respository： 完成仓库创建。 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:1","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#1github上创建仓库"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r2.将本地文件推送到远程仓库 此时，来到博客根目录，先执行下hugo -D生成下网站所需数据： $ hugo -D 此时，你能看到public目录下，生成可很多文件，这个就是后续生成网站所需要的数据。 此时，来到public目录下，执行如下命令 $ cd public/ $ git init $ git remote add origin git@github.com:OnlyOnexl/hugoblog.git $ git add . $ git commit -m\"first commit\" $ git push --set-upstream origin master $ gs 🍀 关于这里如何配置git客户端到github的公私钥方法，请看如下方法： Git配置ssh登录GitHub管理自己的代码 检测本地pc是否已存在ssh秘钥(不存在可忽略次步骤) 1️⃣ 设置签名右键单击鼠标，点击 Git Bash Here输入以下命令，设置签名： git config --global user.name \"hg\" git config --global user.email \"2675263825@qq.com\" 2️⃣ 生成ssh秘钥然后生成密钥(公钥和私钥)： ssh-keygen -t rsa -C \"2675263825@qq.com\" #备注： 1.过程中按2次回车就好； 2.也可以添加-b选项 # ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 3️⃣ 复制ssh公钥到github现在密钥已经生成，一般存放在（/c/Users/you/.ssh/id_rsa.pub.），我们运行下面的命令将密钥复制为粘贴板，等会儿会粘贴到github上去： 复制 id_rsa.pub 文件内容，登录 GitHub，点击用户头像→Settings→SSH and GPG keys，New SSH Key，输入复制的密钥信息，保存： 4️⃣ 验证：本地连接Github右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了 $ ssh -T git@github.com 此时来到github仓库下，观看数据已经被推送上来了： 最后记得在github上设置下gitpages功能 点击Settings，Pages: 选择master分支，点击Save： 验证效果： 公网访问： https://onlyonexl.github.io/hugoblog/ 5️⃣ 如何自定义域名 购买域名 配置域名解析 配置GitHub Pages 验证 公网访问域名：http://www.onlyyou520.com/ 大功告成，接下来就可以开心写自己博客了！😘 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:2","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#2将本地文件推送到远程仓库"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r2.将本地文件推送到远程仓库 此时，来到博客根目录，先执行下hugo -D生成下网站所需数据： $ hugo -D 此时，你能看到public目录下，生成可很多文件，这个就是后续生成网站所需要的数据。 此时，来到public目录下，执行如下命令 $ cd public/ $ git init $ git remote add origin git@github.com:OnlyOnexl/hugoblog.git $ git add . $ git commit -m\"first commit\" $ git push --set-upstream origin master $ gs 🍀 关于这里如何配置git客户端到github的公私钥方法，请看如下方法： Git配置ssh登录GitHub管理自己的代码 检测本地pc是否已存在ssh秘钥(不存在可忽略次步骤) 1️⃣ 设置签名右键单击鼠标，点击 Git Bash Here输入以下命令，设置签名： git config --global user.name \"hg\" git config --global user.email \"2675263825@qq.com\" 2️⃣ 生成ssh秘钥然后生成密钥(公钥和私钥)： ssh-keygen -t rsa -C \"2675263825@qq.com\" #备注： 1.过程中按2次回车就好； 2.也可以添加-b选项 # ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 3️⃣ 复制ssh公钥到github现在密钥已经生成，一般存放在（/c/Users/you/.ssh/id_rsa.pub.），我们运行下面的命令将密钥复制为粘贴板，等会儿会粘贴到github上去： 复制 id_rsa.pub 文件内容，登录 GitHub，点击用户头像→Settings→SSH and GPG keys，New SSH Key，输入复制的密钥信息，保存： 4️⃣ 验证：本地连接Github右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了 $ ssh -T git@github.com 此时来到github仓库下，观看数据已经被推送上来了： 最后记得在github上设置下gitpages功能 点击Settings，Pages: 选择master分支，点击Save： 验证效果： 公网访问： https://onlyonexl.github.io/hugoblog/ 5️⃣ 如何自定义域名 购买域名 配置域名解析 配置GitHub Pages 验证 公网访问域名：http://www.onlyyou520.com/ 大功告成，接下来就可以开心写自己博客了！😘 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:2","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#1-设置签名"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r2.将本地文件推送到远程仓库 此时，来到博客根目录，先执行下hugo -D生成下网站所需数据： $ hugo -D 此时，你能看到public目录下，生成可很多文件，这个就是后续生成网站所需要的数据。 此时，来到public目录下，执行如下命令 $ cd public/ $ git init $ git remote add origin git@github.com:OnlyOnexl/hugoblog.git $ git add . $ git commit -m\"first commit\" $ git push --set-upstream origin master $ gs 🍀 关于这里如何配置git客户端到github的公私钥方法，请看如下方法： Git配置ssh登录GitHub管理自己的代码 检测本地pc是否已存在ssh秘钥(不存在可忽略次步骤) 1️⃣ 设置签名右键单击鼠标，点击 Git Bash Here输入以下命令，设置签名： git config --global user.name \"hg\" git config --global user.email \"2675263825@qq.com\" 2️⃣ 生成ssh秘钥然后生成密钥(公钥和私钥)： ssh-keygen -t rsa -C \"2675263825@qq.com\" #备注： 1.过程中按2次回车就好； 2.也可以添加-b选项 # ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 3️⃣ 复制ssh公钥到github现在密钥已经生成，一般存放在（/c/Users/you/.ssh/id_rsa.pub.），我们运行下面的命令将密钥复制为粘贴板，等会儿会粘贴到github上去： 复制 id_rsa.pub 文件内容，登录 GitHub，点击用户头像→Settings→SSH and GPG keys，New SSH Key，输入复制的密钥信息，保存： 4️⃣ 验证：本地连接Github右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了 $ ssh -T git@github.com 此时来到github仓库下，观看数据已经被推送上来了： 最后记得在github上设置下gitpages功能 点击Settings，Pages: 选择master分支，点击Save： 验证效果： 公网访问： https://onlyonexl.github.io/hugoblog/ 5️⃣ 如何自定义域名 购买域名 配置域名解析 配置GitHub Pages 验证 公网访问域名：http://www.onlyyou520.com/ 大功告成，接下来就可以开心写自己博客了！😘 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:2","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#2-生成ssh秘钥"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r2.将本地文件推送到远程仓库 此时，来到博客根目录，先执行下hugo -D生成下网站所需数据： $ hugo -D 此时，你能看到public目录下，生成可很多文件，这个就是后续生成网站所需要的数据。 此时，来到public目录下，执行如下命令 $ cd public/ $ git init $ git remote add origin git@github.com:OnlyOnexl/hugoblog.git $ git add . $ git commit -m\"first commit\" $ git push --set-upstream origin master $ gs 🍀 关于这里如何配置git客户端到github的公私钥方法，请看如下方法： Git配置ssh登录GitHub管理自己的代码 检测本地pc是否已存在ssh秘钥(不存在可忽略次步骤) 1️⃣ 设置签名右键单击鼠标，点击 Git Bash Here输入以下命令，设置签名： git config --global user.name \"hg\" git config --global user.email \"2675263825@qq.com\" 2️⃣ 生成ssh秘钥然后生成密钥(公钥和私钥)： ssh-keygen -t rsa -C \"2675263825@qq.com\" #备注： 1.过程中按2次回车就好； 2.也可以添加-b选项 # ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 3️⃣ 复制ssh公钥到github现在密钥已经生成，一般存放在（/c/Users/you/.ssh/id_rsa.pub.），我们运行下面的命令将密钥复制为粘贴板，等会儿会粘贴到github上去： 复制 id_rsa.pub 文件内容，登录 GitHub，点击用户头像→Settings→SSH and GPG keys，New SSH Key，输入复制的密钥信息，保存： 4️⃣ 验证：本地连接Github右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了 $ ssh -T git@github.com 此时来到github仓库下，观看数据已经被推送上来了： 最后记得在github上设置下gitpages功能 点击Settings，Pages: 选择master分支，点击Save： 验证效果： 公网访问： https://onlyonexl.github.io/hugoblog/ 5️⃣ 如何自定义域名 购买域名 配置域名解析 配置GitHub Pages 验证 公网访问域名：http://www.onlyyou520.com/ 大功告成，接下来就可以开心写自己博客了！😘 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:2","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#3-复制ssh公钥到github"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r2.将本地文件推送到远程仓库 此时，来到博客根目录，先执行下hugo -D生成下网站所需数据： $ hugo -D 此时，你能看到public目录下，生成可很多文件，这个就是后续生成网站所需要的数据。 此时，来到public目录下，执行如下命令 $ cd public/ $ git init $ git remote add origin git@github.com:OnlyOnexl/hugoblog.git $ git add . $ git commit -m\"first commit\" $ git push --set-upstream origin master $ gs 🍀 关于这里如何配置git客户端到github的公私钥方法，请看如下方法： Git配置ssh登录GitHub管理自己的代码 检测本地pc是否已存在ssh秘钥(不存在可忽略次步骤) 1️⃣ 设置签名右键单击鼠标，点击 Git Bash Here输入以下命令，设置签名： git config --global user.name \"hg\" git config --global user.email \"2675263825@qq.com\" 2️⃣ 生成ssh秘钥然后生成密钥(公钥和私钥)： ssh-keygen -t rsa -C \"2675263825@qq.com\" #备注： 1.过程中按2次回车就好； 2.也可以添加-b选项 # ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 3️⃣ 复制ssh公钥到github现在密钥已经生成，一般存放在（/c/Users/you/.ssh/id_rsa.pub.），我们运行下面的命令将密钥复制为粘贴板，等会儿会粘贴到github上去： 复制 id_rsa.pub 文件内容，登录 GitHub，点击用户头像→Settings→SSH and GPG keys，New SSH Key，输入复制的密钥信息，保存： 4️⃣ 验证：本地连接Github右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了 $ ssh -T git@github.com 此时来到github仓库下，观看数据已经被推送上来了： 最后记得在github上设置下gitpages功能 点击Settings，Pages: 选择master分支，点击Save： 验证效果： 公网访问： https://onlyonexl.github.io/hugoblog/ 5️⃣ 如何自定义域名 购买域名 配置域名解析 配置GitHub Pages 验证 公网访问域名：http://www.onlyyou520.com/ 大功告成，接下来就可以开心写自己博客了！😘 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:2","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#4-验证本地连接github"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r2.将本地文件推送到远程仓库 此时，来到博客根目录，先执行下hugo -D生成下网站所需数据： $ hugo -D 此时，你能看到public目录下，生成可很多文件，这个就是后续生成网站所需要的数据。 此时，来到public目录下，执行如下命令 $ cd public/ $ git init $ git remote add origin git@github.com:OnlyOnexl/hugoblog.git $ git add . $ git commit -m\"first commit\" $ git push --set-upstream origin master $ gs 🍀 关于这里如何配置git客户端到github的公私钥方法，请看如下方法： Git配置ssh登录GitHub管理自己的代码 检测本地pc是否已存在ssh秘钥(不存在可忽略次步骤) 1️⃣ 设置签名右键单击鼠标，点击 Git Bash Here输入以下命令，设置签名： git config --global user.name \"hg\" git config --global user.email \"2675263825@qq.com\" 2️⃣ 生成ssh秘钥然后生成密钥(公钥和私钥)： ssh-keygen -t rsa -C \"2675263825@qq.com\" #备注： 1.过程中按2次回车就好； 2.也可以添加-b选项 # ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 3️⃣ 复制ssh公钥到github现在密钥已经生成，一般存放在（/c/Users/you/.ssh/id_rsa.pub.），我们运行下面的命令将密钥复制为粘贴板，等会儿会粘贴到github上去： 复制 id_rsa.pub 文件内容，登录 GitHub，点击用户头像→Settings→SSH and GPG keys，New SSH Key，输入复制的密钥信息，保存： 4️⃣ 验证：本地连接Github右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了 $ ssh -T git@github.com 此时来到github仓库下，观看数据已经被推送上来了： 最后记得在github上设置下gitpages功能 点击Settings，Pages: 选择master分支，点击Save： 验证效果： 公网访问： https://onlyonexl.github.io/hugoblog/ 5️⃣ 如何自定义域名 购买域名 配置域名解析 配置GitHub Pages 验证 公网访问域名：http://www.onlyyou520.com/ 大功告成，接下来就可以开心写自己博客了！😘 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:2","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#5-如何自定义域名"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r3.hugo进阶📍 如何为某篇文章打上标签及分类？ 当然实际上，Hugo默认会产生 tags 和 categories 的分类，如果只需要这两个，可以不用在 config.toml 中声明就在post头部使用。 配置方法 title: \"First\" date: 2022-05-03 tags: [\"hugo\"] categories: [\"hugo\"] 📍 如何一键发布自己写好的文章到github？ 配置方法 $ vim /etc/profile alias hg=\"cd /d/hugoblog/ \u0026\u0026 hugo -D \u0026\u0026 cd /d/hugoblog/public \u0026\u0026 git add -A \u0026\u0026 git commit -m 'empty' \u0026\u0026 git push\" $ source /etc/profile 这里利用了shell脚本进行一键发布哈哈！😘 测试效果 在content/post目录下创建新文件： 一键发布： 📍 注意：本地仓库推送到github，数据是有一定延时的！😥 📍 如何解决文章后关于Author及Link信息？\\ 问题现象 解决办法 默认配置： 修改后配置： 验证(完美)😘 📍 如何修改站点名称(已解决)-2022.5.4 修改方法 title = \"Onlyyou\" 效果 📍 hugo目录结构 hg@LAPTOP-G8TUFE0T MINGW64 /d $ cd hugoblog/ hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog $ ls archetypes/ config.toml content/ data/ layouts/ public/ static/ themes/ 1. config.toml 所有的hugo站点都有一个全局配置文件，用来配置整个站点的信息，hugo默认提供了跟多配置指令。 2. content 站点下所有的内容页面，也就是我们创建的md文件都在这个content目录下面。 3. data data目录用来存储网站用到一些配置、数据文件。文件类型可以是yaml|toml|json等格式。 4. layouts 存放用来渲染content目录下面内容的模版文件，模版.html格式结尾，layouts可以同时存储在项目目录和themes//layouts目录下。 5. static 用来存储图片、css、js等静态资源文件。 6. themes 用来存储主题，主题可以方便的帮助我们快速建立站点，也可以方便的切换网站的风格样式。 7. public hugo编译后生成网站的所有文件都存储在这里面，把这个目录放到任意web服务器就可以发布网站成功 8. archetypes Hugo new 创建内容页面的时候预置的内容模板 📍 如何安装新的hugo主题(已解决)-2022.5.4 🍀 一般情况下，将主题克隆下来放到themes目录下就可以 🍀 但有的主题，需要把config.toml给替换掉，例如meme主题： hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog $ git clone https://github.com/reuixiy/hugo-theme-meme.git themes/meme #将主题克隆并重命名到themes目录即可！ Cloning into 'themes/meme'... remote: Enumerating objects: 5583, done. remote: Counting objects: 100% (740/740), done. remote: Compressing objects: 100% (289/289), done. remote: Total 5583 (delta 507), reused 451 (delta 451), pack-reused 4843 Receiving objects: 100% (5583/5583), 9.31 MiB | 12.59 MiB/s, done. Resolving deltas: 100% (3086/3086), done. hg@LAPTOP-G8TUFE0T MINGW64 /d/hugoblog $ rm config.toml \u0026\u0026 cp themes/meme/config-examples/en/config.toml config.toml 📍 如何取消GitHub Pages功能(已解决)-2022.5.4 故障现象：在关闭这个GitHub Pages功能时报错 解决办法 本次直接删除仓库了： 实战：手把手带你从0到1搭建自己的hugo博客站点(持续更新)-2022.5.4 ","date":"2023-11-23","objectID":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/:4:3","series":["Hugo基本配置"],"tags":["Hugo"],"title":"搭建自己的hugo博客站点","uri":"/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/#3hugo进阶"},{"categories":["Hugo安装\u0026基本配置"],"content":"这篇文档将展示如何在 DoIt 中使用 GoAT 和 Mermaid 创建 SVG 图表。","date":"2022-02-28","objectID":"/create-diagrams/","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rNote\r你需要使用 Hugo v0.93.0 或更新的版本来创建自定义图表。 如果你不得不使用旧版的 Hugo，你可以使用 mermaid shortcode。 ","date":"2022-02-28","objectID":"/create-diagrams/:0:0","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rGoATGoATGo ASCII Tool 是 markdeep.mini.js 图像生成器的 Go 语言实现。 要使用 GoAT，只需将 ASCII 输入放在代码块中，并将语言设置为 goat。 ```goat // ASCII input here ``` 以下是使用 GoAT 生成 SVG 的一些示例。 查看更多示例 。 ","date":"2022-02-28","objectID":"/create-diagrams/:1:0","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#goat"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r树 ```goat . . . .--- 1 .-- 1 / 1 / \\ | | .---+ .-+ + / \\ .---+---. .--+--. | '--- 2 | '-- 2 / \\ 2 + + | | | | ---+ ---+ + / \\ / \\ .-+-. .-+-. .+. .+. | .--- 3 | .-- 3 \\ / 3 / \\ / \\ | | | | | | | | '---+ '-+ + 1 2 3 4 1 2 3 4 1 2 3 4 '--- 4 '-- 4 \\ 4 ``` 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 ","date":"2022-02-28","objectID":"/create-diagrams/:1:1","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#树"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r重叠 ```goat .-. .-. .-. .-. .-. .-. | | | | | | | | | | | | .---------. .--+---+--. .--+---+--. .--| |--. .--+ +--. .------|--. | | | | | | | | | | | | | | | | | | '---------' '--+---+--' '--+---+--' '--| |--' '--+ +--' '--|------' | | | | | | | | | | | | '-' '-' '-' '-' '-' '-' ``` ","date":"2022-02-28","objectID":"/create-diagrams/:1:2","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#重叠"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r线条装饰 ```goat ________ o * * .--------------. *---+--. | | o o | ^ \\ / | .----------. | | | '--* -+- | | v / \\ / | | \u003c------. | | | '-----\u003e .---(---' ---\u003e*\u003c--- / .+-\u003e*\u003c--o----' | | | | | \u003c--' ^ ^ | | | | | ^ \\ | '--------' | | \\/ *-----' o |\u003c-----\u003e| '-----' |__| v '------------' | /\\ *---------------' ``` ","date":"2022-02-28","objectID":"/create-diagrams/:1:3","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#线条装饰"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r线端 ```goat o--o *--o / / * o o o o o * * * * o o o o * * * * o o o o * * * * o--* *--* v v ^ ^ | | | | | | | | \\ \\ \\ \\ \\ \\ \\ \\ / / / / / / / / o--\u003e *--\u003e * o / / o * v ' o * v ' o * v \\ o * v \\ o * v / o * v / o--- *--- ^ ^ ^ ^ . . . . ^ ^ ^ ^ \\ \\ \\ \\ ^ ^ ^ ^ / / / / | | * o \\ \\ * o | | | | | | | | \\ \\ \\ \\ \\ \\ \\ \\ / / / / / / / / v v ^ ^ v v ^ ^ o * v ' o * v ' o * v \\ o * v \\ o * v / o * v / * o | | * o \\ \\ \u003c--o \u003c--* \u003c--\u003e \u003c--- ---o ---* ---\u003e ---- *\u003c-- o\u003c-- --\u003eo --\u003e* ``` ","date":"2022-02-28","objectID":"/create-diagrams/:1:4","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#线端"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r点网格 ```goat o o o o o * * * * * * * o o * o o o * * * o o o · * · · · · · · o o o o o * * * * * o o o o * o o o o * * * * * o * * · * * · · · · · · o o o o o * * * * * o * o o o o o o o o * * * * * o o o o o · o · · o · · * * · o o o o o * * * * * o * o o o o o o o * * * * o * o o · · · · o · · * · o o o o o * * * * * * * * * o o o o * * * o * o · · · · · · · * ``` · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · ","date":"2022-02-28","objectID":"/create-diagrams/:1:5","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#点网格"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r大节点 ```goat .---. .-. .-. .-. .-. | A +-----\u003e| 1 +\u003c----\u003e| 2 |\u003c----+ 4 +------------------. | 8 | '---' '-' '+' '-' | '-' | ^ | ^ v | v | .-. .-+-. .-. .-+-. .-. .+. .---. | 3 +----\u003e| B |\u003c-----\u003e| 5 +----\u003e| C +----\u003e| 6 +----\u003e| 7 |\u003c----\u003e| D | '-' '---' '-' '---' '-' '-' '---' ``` A 1 2 3 4 B 5 C 6 8 7 D ","date":"2022-02-28","objectID":"/create-diagrams/:1:6","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#大节点"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r小网格 ```goat ___ ___ .---+---+---+---+---. .---+---+---+---. .---. .---. ___/ \\___/ \\ | | | | | | / \\ / \\ / \\ / \\ / | +---+ | / \\___/ \\___/ +---+---+---+---+---+ +---+---+---+---+ +---+ +---+ \\___/ b \\___/ \\ | | | b | | | \\ / \\a/ \\b/ \\ / \\ | +---+ | / a \\___/ \\___/ +---+---+---+---+---+ +---+---+---+---+ +---+ b +---+ \\___/ \\___/ \\ | | a | | | | / \\ / \\ / \\ / \\ / | a +---+ | \\___/ \\___/ '---+---+---+---+---' '---+---+---+---' '---' '---' ``` a b a b a b a b ","date":"2022-02-28","objectID":"/create-diagrams/:1:7","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#小网格"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r大网格 ```goat .----. .----. / \\ / \\ .-----+-----+-----. + +----+ +----. | | | | .-----+-----+-----+-----+ \\ / \\ / \\ | | | | / / / / / +----+ B +----+ + +-----+-----+-----+ +-----+-----+-----+-----+ / \\ / \\ / | | | | / / / / / + A +----+ +----+ | | B | | +-----+-----+-----+-----+ \\ / \\ / \\ +-----+-----+-----+ / / A / B / / '----+ +----+ + | | | | +-----+-----+-----+-----+ \\ / \\ / | A | | | / / / / / '----' '----' '-----+-----+-----' '-----+-----+-----+-----+ ``` A B A B A B ","date":"2022-02-28","objectID":"/create-diagrams/:1:8","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#大网格"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r复杂图表 ```goat +-------------------+ ^ .---. | A Box |__.--.__ __.--\u003e | .-. | | | | '--' v | * |\u003c--- | | +-------------------+ '-' | | Round *---(-. | .-----------------. .-------. .----------. .-------. | | | | Mixed Rounded | | | / Diagonals \\ | | | | | | | \u0026 Square Corners | '--. .--' / \\ |---+---| '-)-' .--------. '--+------------+-' .--. | '-------+--------' | | | | / Search / | | | | '---. | '-------' | '-+------' |\u003c----------\u003e| | | | v Interior | ^ ' \u003c---' '----' .-----------. ---. .--- v | .------------------. Diag line | .-------. +---. \\ / . | | if (a \u003e b) +---. .---\u003e| | | | | Curved line \\ / / \\ | | obj-\u003efcn() | \\ / | '-------' |\u003c--' + / \\ | '------------------' '--' '--+--------' .--. .--. | .-. +Done?+-' .---+-----. | ^ |\\ | | /| .--+ | | \\ / | | | Join \\|/ | | Curved | \\| |/ | | \\ | \\ / | | +----\u003e o --o-- '-' Vertical '--' '--' '-- '--' + .---. \u003c--+---+-----' | /|\\ | | 3 | v not:line 'quotes' .-' '---' .-. .---+--------. / A || B *bold* | ^ | | | Not a dot | \u003c---+---\u003c-- A dash--is not a line v | '-' '---------+--' / Nor/is this. --- ``` \u0026 A M S i o i q f b B x u j o e a ( - x d r a \u003e e f R \u003e c o C n u o b ( n r ) ) d n e e J d r o s i n N o R D t o i u a a n g d d l o i t n e D i a g o n a l s C V u e r r v t e i d c a l n o t A N C : o u l d r r i A a / I v n s i n e e h s t d - e - t r l B i h i i s i o n ' s r e q n . u * o o b t t o e l a s d ' * l i n e D o n S e e ? a r c 3 h ","date":"2022-02-28","objectID":"/create-diagrams/:1:9","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#复杂图表"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rMermaidMermaid 是一个基于 JavaScript 的图表工具，它允许您使用文本和代码创建图表和可视化。 要使用 Mermaid，只需将 Mermaid 的代码输入放在代码块中，并将语言设置为 mermaid。 ```mermaid // mermaid diagram code here ``` 下面是一些使用 Mermaid 生成的 SVG 图表示例。 ","date":"2022-02-28","objectID":"/create-diagrams/:2:0","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#mermaid"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r流程图All Flowcharts are composed of nodes, geometric shapes and edges, the arrows or lines. The mermaid code defines the way that these nodes and edges are made and interact. ```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` graph TD;\rA--\u003eB;\rA--\u003eC;\rB--\u003eD;\rC--\u003eD;\r","date":"2022-02-28","objectID":"/create-diagrams/:2:1","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#流程图"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r序列图A Sequence diagram is an interaction diagram that shows how processes operate with one another and in what order. ```mermaid sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! ``` sequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u003e\u003eJohn: Hello John, how are you?\rloop Healthcheck\rJohn-\u003e\u003eJohn: Fight against hypochondria\rend\rNote right of John: Rational thoughts prevail!\rJohn--\u003e\u003eAlice: Great!\rJohn-\u003e\u003eBob: How about you?\rBob--\u003e\u003eJohn: Jolly good!\r","date":"2022-02-28","objectID":"/create-diagrams/:2:2","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#序列图"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r甘特图A Gantt chart is a type of bar chart, first developed by Karol Adamiecki in 1896, and independently by Henry Gantt in the 1910s, that illustrates a project schedule and the amount of time it would take for any one project to finish. Gantt charts illustrate numbers of days between the start and finish dates of the terminal elements and summary elements of a project. ```mermaid gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d ``` gantt\rdateFormat YYYY-MM-DD\rtitle Adding GANTT diagram to mermaid\rexcludes weekdays 2014-01-10\rsection A section\rCompleted task :done, des1, 2014-01-06,2014-01-08\rActive task :active, des2, 2014-01-09, 3d\rFuture task : des3, after des2, 5d\rFuture task2 : des4, after des3, 5d\r","date":"2022-02-28","objectID":"/create-diagrams/:2:3","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#甘特图"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r类图The class diagram is the main building block of object-oriented modelling. It is used for general conceptual modelling of the structure of the application, and detailed modelling translating the models into programming code. Class diagrams can also be used for data modelling. The classes in a class diagram represent both the main elements, interactions in the application, and the classes to be programmed. ```mermaid classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label ``` classDiagram\rClass01 \u003c|-- AveryLongClass : Cool\rClass03 *-- Class04\rClass05 o-- Class06\rClass07 .. Class08\rClass09 --\u003e C2 : Where am i?\rClass09 --* C3\rClass09 --|\u003e Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rClass08 \u003c--\u003e C2: Cool label\r","date":"2022-02-28","objectID":"/create-diagrams/:2:4","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#类图"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rGit 图 ```mermaid gitGraph commit branch hotfix checkout hotfix commit branch develop checkout develop commit id:\"ash\" tag:\"abc\" branch featureB checkout featureB commit type:HIGHLIGHT checkout main checkout hotfix commit type:NORMAL checkout develop commit type:REVERSE checkout featureB commit checkout main merge hotfix checkout featureB commit checkout develop branch featureA commit checkout develop merge hotfix checkout featureA commit checkout featureB commit checkout develop merge featureA branch release checkout release commit checkout main commit checkout release merge main checkout develop merge release ``` gitGraph\rcommit\rbranch hotfix\rcheckout hotfix\rcommit\rbranch develop\rcheckout develop\rcommit id:\"ash\" tag:\"abc\"\rbranch featureB\rcheckout featureB\rcommit type:HIGHLIGHT\rcheckout main\rcheckout hotfix\rcommit type:NORMAL\rcheckout develop\rcommit type:REVERSE\rcheckout featureB\rcommit\rcheckout main\rmerge hotfix\rcheckout featureB\rcommit\rcheckout develop\rbranch featureA\rcommit\rcheckout develop\rmerge hotfix\rcheckout featureA\rcommit\rcheckout featureB\rcommit\rcheckout develop\rmerge featureA\rbranch release\rcheckout release\rcommit\rcheckout main\rcommit\rcheckout release\rmerge main\rcheckout develop\rmerge release\r","date":"2022-02-28","objectID":"/create-diagrams/:2:5","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#git-图"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r实体关系图 - 实验性An entity–relationship diagram (or ER diagram) describes interrelated things of interest in a specific domain of knowledge. A basic ER diagram is composed of entity types (which classify the things of interest) and specifies relationships that can exist between entities (instances of those entity types). ```mermaid erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ``` erDiagram\rCUSTOMER ||--o{ ORDER : places\rORDER ||--|{ LINE-ITEM : contains\rCUSTOMER }|..|{ DELIVERY-ADDRESS : uses\r","date":"2022-02-28","objectID":"/create-diagrams/:2:6","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#实体关系图---实验性"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r用户旅程图User journey diagrams describe at a high level of detail exactly what steps different users take to complete a specific task within a system, application or website. This technique shows the current (as-is) user workflow, and reveals areas of improvement for the to-be workflow. ```mermaid journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me ``` journey\rtitle My working day\rsection Go to work\rMake tea: 5: Me\rGo upstairs: 3: Me\rDo work: 1: Me, Cat\rsection Go home\rGo downstairs: 5: Me\rSit down: 5: Me\r","date":"2022-02-28","objectID":"/create-diagrams/:2:7","series":null,"tags":["diagram","markdown","Hugo"],"title":"如何在 DoIt 中创建图表","uri":"/create-diagrams/#用户旅程图"},{"categories":["Hugo安装\u0026基本配置"],"content":"Guide to setup PWA in DoIt","date":"2021-05-10","objectID":"/pwa-support/","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/"},{"categories":["Hugo安装\u0026基本配置"],"content":"了解如何在 DoIt 主题中配置渐进式网络应用程序 (PWA). ","date":"2021-05-10","objectID":"/pwa-support/:0:0","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/#"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r什么是 PWA？渐进式网络应用程序(PWA)是运用现代的 Web API 以及传统的渐进式增强策略来创建跨平台网络应用程序.这些应用无处不在、功能丰富, 使其具有与原生应用相同的用户体验. ","date":"2021-05-10","objectID":"/pwa-support/:1:0","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/#什么是-pwa"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r为什么要配置 PWA？你并不需要将你的站点配置为一个 PWA. 传统的网站足以满足你想要分享的所有内容.但是, PWA 带来了一些可能有用的额外好处. 在用户安装 PWA 后, 页面将由 service worker 自动缓存, 这使得从第二次访问开始页面将被快速加载. 用户始终可以在离线时访问缓存的页面. 这些功能可能对某些网站（例如此文档站点）很有用, 但是将个人博客配置为 PWA 就没有多少意义.当然一切都取决于你的选择, 无论如何 DoIt 主题都将为你提供开启此功能的选项. ","date":"2021-05-10","objectID":"/pwa-support/:2:0","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/#为什么要配置-pwa"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r如何将使用 DoIt 主题的静态网站配置为 PWA?","date":"2021-05-10","objectID":"/pwa-support/:3:0","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/#如何将使用-doit-主题的静态网站配置为-pwa"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r配置 site.webmanifest你需要在 /static 文件夹下创建名为 site.webmanifest 的文件, 并在此文件提供有关你的 PWA 的信息. 以下是必填参数. name [必须] 你的 PWA 的名称. short_name [必须] 你的 PWA 的简称. start_url [必须] 你的 PWA 的起始地址.请默认填写\"/\". icons [必须] 你的 PWA 的图标.你可以将网站的 favicon 作为图标. 您还可以在 site.webmanifest 中设置其他可选值, 查看这篇文档来了解更多. 这是一份示例 site.webmanifest 文件. { \"name\": \"DoIt Theme Documentation\", \"short_name\": \"DoIt Docs\", \"start_url\": \"/\", \"description\": \"The documentation site for Hugo DoIt Theme\", \"theme_color\": \"#ffffff\", \"background_color\": \"#ffffff\", \"orientation\": \"portrait\", \"display\": \"standalone\", \"icons\": [ { \"src\": \"/android-chrome-192x192.png\", \"sizes\": \"192x192\", \"type\": \"image/png\" }, { \"src\": \"/android-chrome-512x512.png\", \"sizes\": \"512x512\", \"type\": \"image/png\" }, { \"src\": \"/apple-touch-icon.png\", \"sizes\": \"180x180\", \"type\": \"image/png\", \"purpose\": \"any maskable\" } ] } ","date":"2021-05-10","objectID":"/pwa-support/:3:1","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/#配置-sitewebmanifest"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r配置离线页面离线页面将在访客离线访问未缓存的页面时显示. 在/content目录下创建offline.md并在其中编写离线提示. Permalink\r你需要确保离线页面的 Permalink 是 /offline, 否则你需要手动更改 service worker 中 OFFLINE_CACHE_FILES 和 OFFLINE_PAGE 的值.\ri18n\r目前离线页面不支持 i18n, 如果你运行的是多语言网站, 请考虑在同一页面上编写多条不同语言的离线消息.\r这是一个示例离线页面. --- title: \"Offline\" --- \u003e 你没有连接至互联网, 只有缓存的页面可用. ","date":"2021-05-10","objectID":"/pwa-support/:3:2","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/#配置离线页面"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r开启 enablePWA 选项前往 config.toml, 添加/修改 [params] 配置项下 enablePWA 选项的值为 true. [params] # ... enablePWA = true ","date":"2021-05-10","objectID":"/pwa-support/:3:3","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/#开启-enablepwa-选项"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r安装并使用你的 PWA如果一切顺利, 现在当你访问你的网站时, 浏览器将显示一个安装按钮. 安装 PWA\r单击“安装”后, 你的网站将被安装为一个本地的原生应用程序. 安装完成\r大功告成！你已成功将你的静态网站配置为了一个 PWA 🎉 如果你在配置过程中有任何问题, 你可以通过浏览器调试工具中的 Console 与 Application 面板来进行调试.你也可以用PWA Builder来检查你的网站以获得更多信息.你可以创建一个 discussion 来获得社区帮助或者提交 issue 来报告你遇到的任何 bug. ","date":"2021-05-10","objectID":"/pwa-support/:4:0","series":null,"tags":["PWA","Hugo"],"title":"PWA 支持","uri":"/pwa-support/#安装并使用你的-pwa"},{"categories":["Hugo安装\u0026基本配置"],"content":"DoIt 主题在 Hugo 内置的 shortcode 的基础上提供多个扩展的 shortcode.","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/"},{"categories":["Hugo安装\u0026基本配置"],"content":"DoIt 主题在 Hugo 内置的 shortcode 的基础上提供多个扩展的 shortcode. ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:0:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rstyle 注意\rHugo extended 版本对于 style shortcode 是必需的.\rstyle shortcode 用来在你的文章中插入自定义样式. style shortcode 有两个位置参数. 第一个参数是自定义样式的内容. 它支持  SASS 中的嵌套语法, 并且 \u0026 指代这个父元素. 第二个参数是包裹你要更改样式的内容的 HTML 标签, 默认值是 div. 一个 style 示例: {{\u003c style \"text-align:right; strong{color:#00b1ff;}\" \u003e}} This is a **right-aligned** paragraph. {{\u003c /style \u003e}} 呈现的输出效果如下: This is a right-aligned paragraph. ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:1:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#style"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rlink link shortcode 是 Markdown 链接语法 的替代. link shortcode 可以提供一些其它的功能并且可以在代码块中使用. 支持本地资源引用的完整用法. link shortcode 有以下命名参数: href [必需] (第一个位置参数) 链接的目标. content [可选] (第二个位置参数) 链接的内容, 默认值是 href 参数的值. 支持 Markdown 或者 HTML 格式. title [可选] (第三个位置参数) HTML a 标签 的 title 属性, 当悬停在链接上会显示的提示. rel [可选] HTML a 标签 的 rel 补充属性. class [可选] HTML a 标签 的 class 属性. 一个 link 示例: {{\u003c link \"https://assemble.io\" \u003e}} 或者 {{\u003c link href=\"https://assemble.io\" \u003e}} {{\u003c link \"mailto:contact@revolunet.com\" \u003e}} 或者 {{\u003c link href=\"mailto:contact@revolunet.com\" \u003e}} {{\u003c link \"https://assemble.io\" Assemble \u003e}} 或者 {{\u003c link href=\"https://assemble.io\" content=Assemble \u003e}} 呈现的输出效果如下: https://assemble.io mailto:contact@revolunet.com Assemble 一个带有标题的 link 示例: {{\u003c link \"https://github.com/upstage/\" Upstage \"Visit Upstage!\" \u003e}} 或者 {{\u003c link href=\"https://github.com/upstage/\" content=Upstage title=\"Visit Upstage!\" \u003e}} 呈现的输出效果如下 (将鼠标悬停在链接上, 会有一行提示): Upstage ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:2:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#link"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rimage image shortcode 是 figure shortcode 的替代. image shortcode 可以充分利用 lightgallery.js. 支持本地资源引用的完整用法. image shortcode 有以下命名参数: src [必需] (第一个位置参数) 图片的 URL. alt [可选] (第二个位置参数) 图片无法显示时的替代文本, 默认值是 src 参数的值. 支持 Markdown 或者 HTML 格式. caption [可选] (第三个位置参数) 图片标题. 支持 Markdown 或者 HTML 格式. title [可选] 当悬停在图片上会显示的提示. class [可选] HTML figure 标签的 class 属性. src_s [可选] 图片缩略图的 URL, 用在画廊模式中, 默认值是 src 参数的值. src_l [可选] 高清图片的 URL, 用在画廊模式中, 默认值是 src 参数的值. height [可选] 图片的 height 属性. width [可选] 图片的 width 属性. linked [可选] 图片是否需要被链接, 默认值是 true. rel [可选] HTML a 标签 的 rel 补充属性, 仅在 linked 属性设置成 true 时有效. 一个 image 示例: {{\u003c image src=\"/images/lighthouse.webp\" caption=\"Lighthouse (`image`)\" src_s=\"/images/lighthouse-small.webp\" src_l=\"/images/lighthouse-large.webp\" \u003e}} 呈现的输出效果如下: Lighthouse (image)\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:3:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#image"},{"categories":["Hugo安装\u0026基本配置"],"content":"\radmonitionadmonition shortcode 支持 12 种 帮助你在页面中插入提示的横幅. 支持 Markdown 或者 HTML 格式. 注意\r一个 注意 横幅\r摘要\r一个 摘要 横幅\r信息\r一个 信息 横幅\r技巧\r一个 技巧 横幅\r成功\r一个 成功 横幅\r问题\r一个 问题 横幅\r警告\r一个 警告 横幅\r失败\r一个 失败 横幅\r危险\r一个 危险 横幅\rBug\r一个 Bug 横幅\r示例\r一个 示例 横幅\r引用\r一个 引用 横幅\radmonition shortcode 有以下命名参数: type [必需] (第一个位置参数) admonition 横幅的类型, 默认值是 note. title [可选] (第二个位置参数) admonition 横幅的标题, 默认值是 type 参数的值. open [可选] (第三个位置参数) 横幅内容是否默认展开, 默认值是 true. 一个 admonition 示例: {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 或者 {{\u003c admonition tip \"This is a tip\" false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 呈现的输出效果如下: This is a tip\r一个 技巧 横幅\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:4:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#admonition"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rmermaidmermaid 是一个可以帮助你在文章中生成图表和流程图的库, 类似 Markdown 的语法. 只需将你的 mermaid 代码插入 mermaid shortcode 中即可. ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:5:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#mermaid"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r流程图一个 流程图 mermaid 示例: {{\u003c mermaid \u003e}}graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} 呈现的输出效果如下: graph LR;\rA[Hard edge] --\u003e|Link text| B(Round edge)\rB --\u003e C{Decision}\rC --\u003e|One| D[Result one]\rC --\u003e|Two| E[Result two]\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:5:1","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#flowchart"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r时序图一个 时序图 mermaid 示例: {{\u003c mermaid \u003e}}sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} 呈现的输出效果如下: sequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u003e\u003eJohn: Hello John, how are you?\rloop Healthcheck\rJohn-\u003eJohn: Fight against hypochondria\rend\rNote right of John: Rational thoughts prevail...\rJohn--\u003eAlice: Great!\rJohn-\u003eBob: How about you?\rBob--\u003eJohn: Jolly good!\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:5:2","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#sequence-diagram"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r甘特图一个 甘特图 mermaid 示例: {{\u003c mermaid \u003e}}gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u003c /mermaid \u003e}} 呈现的输出效果如下: gantt\rdateFormat YYYY-MM-DD\rtitle Adding GANTT diagram functionality to mermaid\rsection A section\rCompleted task :done, des1, 2014-01-06,2014-01-08\rActive task :active, des2, 2014-01-09, 3d\rFuture task : des3, after des2, 5d\rFuture task2 : des4, after des3, 5d\rsection Critical tasks\rCompleted task in the critical line :crit, done, 2014-01-06,24h\rImplement parser and jison :crit, done, after des1, 2d\rCreate tests for parser :crit, active, 3d\rFuture task in critical line :crit, 5d\rCreate tests for renderer :2d\rAdd to mermaid :1d\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:5:3","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#gantt"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r类图一个 类图 mermaid 示例: {{\u003c mermaid \u003e}}classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label {{\u003c /mermaid \u003e}} 呈现的输出效果如下: classDiagram\rClass01 \u003c|-- AveryLongClass : Cool\rClass03 *-- Class04\rClass05 o-- Class06\rClass07 .. Class08\rClass09 --\u003e C2 : Where am i?\rClass09 --* C3\rClass09 --|\u003e Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rClass08 \u003c--\u003e C2: Cool label\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:5:4","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#class-diagram"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r状态图一个 状态图 mermaid 示例: {{\u003c mermaid \u003e}}stateDiagram [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] {{\u003c /mermaid \u003e}} 呈现的输出效果如下: stateDiagram\r[*] --\u003e Still\rStill --\u003e [*]\rStill --\u003e Moving\rMoving --\u003e Still\rMoving --\u003e Crash\rCrash --\u003e [*]\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:5:5","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#state-diagram"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rGit 图一个 Git 图 mermaid 示例: {{\u003c mermaid \u003e}} gitGraph commit branch hotfix checkout hotfix commit branch develop checkout develop commit id:\"ash\" tag:\"abc\" branch featureB checkout featureB commit type:HIGHLIGHT checkout main checkout hotfix commit type:NORMAL checkout develop commit type:REVERSE checkout featureB commit checkout main merge hotfix checkout featureB commit checkout develop branch featureA commit checkout develop merge hotfix checkout featureA commit checkout featureB commit checkout develop merge featureA branch release checkout release commit checkout main commit checkout release merge main checkout develop merge release {{\u003c /mermaid \u003e}} 呈现的输出效果如下: gitGraph\rcommit\rbranch hotfix\rcheckout hotfix\rcommit\rbranch develop\rcheckout develop\rcommit id:\"ash\" tag:\"abc\"\rbranch featureB\rcheckout featureB\rcommit type:HIGHLIGHT\rcheckout main\rcheckout hotfix\rcommit type:NORMAL\rcheckout develop\rcommit type:REVERSE\rcheckout featureB\rcommit\rcheckout main\rmerge hotfix\rcheckout featureB\rcommit\rcheckout develop\rbranch featureA\rcommit\rcheckout develop\rmerge hotfix\rcheckout featureA\rcommit\rcheckout featureB\rcommit\rcheckout develop\rmerge featureA\rbranch release\rcheckout release\rcommit\rcheckout main\rcommit\rcheckout release\rmerge main\rcheckout develop\rmerge release\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:5:6","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#git-graph"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r饼图一个 饼图 mermaid 示例: {{\u003c mermaid \u003e}}pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 {{\u003c /mermaid \u003e}} 呈现的输出效果如下: pie\r\"Dogs\" : 386\r\"Cats\" : 85\r\"Rats\" : 15\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:5:7","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#pie"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rechartsECharts 是一个帮助你生成交互式数据可视化的库. ECharts 提供了常规的 折线图, 柱状图, 散点图, 饼图, K线图, 用于统计的 盒形图, 用于地理数据可视化的 地图, 热力图, 线图, 用于关系数据可视化的 关系图, treemap, 旭日图, 多维数据可视化的 平行坐标, 还有用于 BI 的 漏斗图, 仪表盘, 并且支持图与图之间的混搭. 只需在 echarts shortcode 中以 JSON/YAML/TOML格式插入 ECharts 选项即可. 一个 JSON 格式的 echarts 示例: {{\u003c echarts \u003e}} { \"title\": { \"text\": \"折线统计图\", \"top\": \"2%\", \"left\": \"center\" }, \"tooltip\": { \"trigger\": \"axis\" }, \"legend\": { \"data\": [\"邮件营销\", \"联盟广告\", \"视频广告\", \"直接访问\", \"搜索引擎\"], \"top\": \"10%\" }, \"grid\": { \"left\": \"5%\", \"right\": \"5%\", \"bottom\": \"5%\", \"top\": \"20%\", \"containLabel\": true }, \"toolbox\": { \"feature\": { \"saveAsImage\": { \"title\": \"保存为图片\" } } }, \"xAxis\": { \"type\": \"category\", \"boundaryGap\": false, \"data\": [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"] }, \"yAxis\": { \"type\": \"value\" }, \"series\": [ { \"name\": \"邮件营销\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [120, 132, 101, 134, 90, 230, 210] }, { \"name\": \"联盟广告\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [220, 182, 191, 234, 290, 330, 310] }, { \"name\": \"视频广告\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [150, 232, 201, 154, 190, 330, 410] }, { \"name\": \"直接访问\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [320, 332, 301, 334, 390, 330, 320] }, { \"name\": \"搜索引擎\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u003c /echarts \u003e}} 一个 YAML 格式的 echarts 示例: {{\u003c echarts \u003e}} title: text: 折线统计图 top: 2% left: center tooltip: trigger: axis legend: data: - 邮件营销 - 联盟广告 - 视频广告 - 直接访问 - 搜索引擎 top: 10% grid: left: 5% right: 5% bottom: 5% top: 20% containLabel: true toolbox: feature: saveAsImage: title: 保存为图片 xAxis: type: category boundaryGap: false data: - 周一 - 周二 - 周三 - 周四 - 周五 - 周六 - 周日 yAxis: type: value series: - name: 邮件营销 type: line stack: 总量 data: - 120 - 132 - 101 - 134 - 90 - 230 - 210 - name: 联盟广告 type: line stack: 总量 data: - 220 - 182 - 191 - 234 - 290 - 330 - 310 - name: 视频广告 type: line stack: 总量 data: - 150 - 232 - 201 - 154 - 190 - 330 - 410 - name: 直接访问 type: line stack: 总量 data: - 320 - 332 - 301 - 334 - 390 - 330 - 320 - name: 搜索引擎 type: line stack: 总量 data: - 820 - 932 - 901 - 934 - 1290 - 1330 - 1320 {{\u003c /echarts \u003e}} 一个 TOML 格式的 echarts 示例: {{\u003c echarts \u003e}} [title] text = \"折线统计图\" top = \"2%\" left = \"center\" [tooltip] trigger = \"axis\" [legend] data = [ \"邮件营销\", \"联盟广告\", \"视频广告\", \"直接访问\", \"搜索引擎\" ] top = \"10%\" [grid] left = \"5%\" right = \"5%\" bottom = \"5%\" top = \"20%\" containLabel = true [toolbox] [toolbox.feature] [toolbox.feature.saveAsImage] title = \"保存为图片\" [xAxis] type = \"category\" boundaryGap = false data = [ \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\" ] [yAxis] type = \"value\" [[series]] name = \"邮件营销\" type = \"line\" stack = \"总量\" data = [ 120.0, 132.0, 101.0, 134.0, 90.0, 230.0, 210.0 ] [[series]] name = \"联盟广告\" type = \"line\" stack = \"总量\" data = [ 220.0, 182.0, 191.0, 234.0, 290.0, 330.0, 310.0 ] [[series]] name = \"视频广告\" type = \"line\" stack = \"总量\" data = [ 150.0, 232.0, 201.0, 154.0, 190.0, 330.0, 410.0 ] [[series]] name = \"直接访问\" type = \"line\" stack = \"总量\" data = [ 320.0, 332.0, 301.0, 334.0, 390.0, 330.0, 320.0 ] [[series]] name = \"搜索引擎\" type = \"line\" stack = \"总量\" data = [ 820.0, 932.0, 901.0, 934.0, 1290.0, 1330.0, 1320.0 ] {{\u003c /echarts \u003e}} 呈现的输出效果如下: echarts shortcode 还有以下命名参数: width [可选] (第一个位置参数) 数据可视化的宽度, 默认值是 100%. height [可选] (第二个位置参数) 数据可视化的高度, 默认值是 30rem. ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:6:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#echarts"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rmapbox Mapbox GL JS 是一个 JavaScript 库, 它使用 WebGL, 以 vector tiles 和 Mapbox styles 为来源, 将它们渲染成互动式地图. mapbox shortcode 有以下命名参数来使用 Mapbox GL JS: lng [必需] (第一个位置参数) 地图初始中心点的经度, 以度为单位. lat [必需] (第二个位置参数) 地图初始中心点的纬度, 以度为单位. zoom [可选] (第三个位置参数) 地图的初始缩放级别, 默认值是 10. marked [可选] (第四个位置参数) 是否在地图的初始中心点添加图钉, 默认值是 true. light-style [可选] (第五个位置参数) 浅色主题的地图样式, 默认值是前置参数或者网站配置中设置的值. dark-style [可选] (第六个位置参数) 深色主题的地图样式, 默认值是前置参数或者网站配置中设置的值. navigation [可选] 是否添加 NavigationControl, 默认值是前置参数或者网站配置中设置的值. geolocate [可选] 是否添加 GeolocateControl, 默认值是前置参数或者网站配置中设置的值. scale [可选] 是否添加 ScaleControl, 默认值是前置参数或者网站配置中设置的值. fullscreen [可选] 是否添加 FullscreenControl, 默认值是前置参数或者网站配置中设置的值. width [可选] 地图的宽度, 默认值是 100%. height [可选] 地图的高度, 默认值是 20rem. 一个简单的 mapbox 示例: {{\u003c mapbox 121.485 31.233 12 \u003e}} 或者 {{\u003c mapbox lng=121.485 lat=31.233 zoom=12 \u003e}} 呈现的输出效果如下: 一个带有自定义样式的 mapbox 示例: {{\u003c mapbox -122.252 37.453 10 false \"mapbox://styles/mapbox/streets-zh-v1\" \u003e}} 或者 {{\u003c mapbox lng=-122.252 lat=37.453 zoom=10 marked=false light-style=\"mapbox://styles/mapbox/streets-zh-v1\" \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:7:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#mapbox"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rmusicmusic shortcode 基于 APlayer 和 MetingJS 提供了一个内嵌的响应式音乐播放器. 有三种方式使用 music shortcode. ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:8:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#music"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r自定义音乐 URL 支持本地资源引用的完整用法. music shortcode 有以下命名参数来使用自定义音乐 URL: server [必需] 音乐的链接. type [可选] 音乐的名称. artist [可选] 音乐的创作者. cover [可选] 音乐的封面链接. 一个使用自定义音乐 URL 的 music 示例: {{\u003c music url=\"/music/Wavelength.mp3\" name=Wavelength artist=oldmanyoung cover=\"/images/Wavelength.webp\" \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:8:1","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#custom-music-url"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r音乐平台 URL 的自动识别music shortcode 有一个命名参数来使用音乐平台 URL 的自动识别: auto [必需]] (第一个位置参数) 用来自动识别的音乐平台 URL, 支持 netease, tencent 和 xiami 平台. 一个使用音乐平台 URL 的自动识别的 music 示例: {{\u003c music auto=\"https://music.163.com/#/playlist?id=60198\" \u003e}} 或者 {{\u003c music \"https://music.163.com/#/playlist?id=60198\" \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:8:2","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#automatic-identification"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r自定义音乐平台, 类型和 IDmusic shortcode 有以下命名参数来使用自定义音乐平台: server [必需] (第一个位置参数) [netease, tencent, kugou, xiami, baidu] 音乐平台. type [必需] (第二个位置参数) [song, playlist, album, search, artist] 音乐类型. id [必需] (第三个位置参数) 歌曲 ID, 或者播放列表 ID, 或者专辑 ID, 或者搜索关键词, 或者创作者 ID. 一个使用自定义音乐平台的 music 示例: {{\u003c music server=\"netease\" type=\"song\" id=\"1868553\" \u003e}} 或者 {{\u003c music netease song 1868553 \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:8:3","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#custom-server"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r其它参数music shortcode 有一些可以应用于以上三种方式的其它命名参数: theme [可选] 音乐播放器的主题色, 默认值是 #448aff. fixed [可选] 是否开启固定模式, 默认值是 false. mini [可选] 是否开启迷你模式, 默认值是 false. autoplay [可选] 是否自动播放音乐, 默认值是 false. volume [可选] 第一次打开播放器时的默认音量, 会被保存在浏览器缓存中, 默认值是 0.7. mutex [可选] 是否自动暂停其它播放器, 默认值是 true. music shortcode 还有一些只适用于音乐列表方式的其它命名参数: loop [可选] [all, one, none] 音乐列表的循环模式, 默认值是 none. order [可选] [list, random] 音乐列表的播放顺序, 默认值是 list. list-folded [可选] 初次打开的时候音乐列表是否折叠, 默认值是 false. list-max-height [可选] 音乐列表的最大高度, 默认值是 340px. ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:8:4","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#other-parameters"},{"categories":["Hugo安装\u0026基本配置"],"content":"\raplayer and audio 如果你需要针对音乐播放器的更多自定义选项（如自定义歌单，迷你模式，自定义音乐类型以及更多…），你可以使用 aplayer shortcode 配合 audio shortcode 以发挥 APlayer.js 的全部功能。 aplayer shortcode 用于创建一个 APlayer 播放器实例，audio shortcode 则用于设置音乐文件的相关信息。请查看 APlayer.js 的文档 来了解所有的可配置项。 一个 aplayer 和 audio 的示例： {{\u003c aplayer fixed=false mini=false autoplay=false theme=\"#b7daff\" loop=\"all\" order=\"list\" preload=\"auto\" volume=0.7 mutex=true lrcType=1 listFolded=false listMaxHeight=\"\" storageName=\"aplayer-setting\" \u003e}} {{\u003c audio name=\"Wavelength\" artist=\"oldmanyoung\" url=\"/music/Wavelength.mp3\" cover=\"/images/Wavelength.webp\" /\u003e}} {{\u003c audio name=\"Wavelength\" artist=\"oldmanyoung\" url=\"/music/Wavelength.mp3\" cover=\"/images/Wavelength.webp\" \u003e}} [00:00.00]APlayer audio1 [00:04.01]is [00:08.02]amazing {{\u003c /audio \u003e}} {{\u003c /aplayer \u003e}} 呈现的输出效果如下： 需要注意的是，这两个 shortcodes 并不能单独使用，并且必须使用命名参数来设置它们的属性。 如果你将 LRC 放置于 audio shortcode 之中，它会通过 JS 字符串方式传递给 APlayer，所以你需要将 lrcType 设置为 1。如果你通过配置 lrc 参数的方式来设置 LRC 文件的链接，那么它将会被通过 LRC 文件方式传递给 APlayer，则 lrcType 需要被设置为 3。 ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:9:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#aplayer-and-audio"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rbilibili bilibili shortcode 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器. 如果视频只有一个部分, 则仅需要视频的 BV id, 例如: https://www.bilibili.com/video/BV1Sx411T7QQ 一个 bilibili 示例: {{\u003c bilibili BV1Sx411T7QQ \u003e}} 或者 {{\u003c bilibili id=BV1Sx411T7QQ \u003e}} 呈现的输出效果如下: 如果视频包含多个部分, 则除了视频的 BV id 之外, 还需要 p, 默认值为 1, 例如: https://www.bilibili.com/video/BV1TJ411C7An?p=3 一个带有 p 参数的 bilibili 示例: {{\u003c bilibili BV1TJ411C7An 3 \u003e}} 或者 {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:10:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#bilibili"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rtypeittypeit shortcode 基于 TypeIt 提供了打字动画. 只需将你需要打字动画的内容插入 typeit shortcode 中即可. ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:11:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#typeit"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r简单内容允许使用 Markdown 格式的简单内容, 并且 不包含 富文本的块内容, 例如图像等等… 一个 typeit 示例: {{\u003c typeit \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*... {{\u003c /typeit \u003e}} 呈现的输出效果如下: 另外, 你也可以自定义 HTML 标签. 一个带有 h4 标签的 typeit 示例: {{\u003c typeit tag=h4 \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*... {{\u003c /typeit \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:11:1","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#simple-content"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r简单内容允许使用 Markdown 格式的简单内容, 并且 不包含 富文本的块内容, 例如图像等等… 一个 typeit 示例: {{\u003c typeit \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*... {{\u003c /typeit \u003e}} 呈现的输出效果如下: 另外, 你也可以自定义 HTML 标签. 一个带有 h4 标签的 typeit 示例: {{\u003c typeit tag=h4 \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*... {{\u003c /typeit \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:11:1","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#id-6 class="},{"categories":["Hugo安装\u0026基本配置"],"content":"\r代码内容代码内容也是允许的, 并且通过使用参数 code 指定语言类型可以实习语法高亮. 一个带有 code 参数的 typeit 示例: {{\u003c typeit code=java \u003e}} public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } {{\u003c /typeit \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:11:2","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#code-content"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r分组内容默认情况下, 所有打字动画都是同时开始的. 但是有时你可能需要按顺序开始一组 typeit 内容的打字动画. 一组具有相同 group 参数值的 typeit 内容将按顺序开始打字动画. 一个带有 group 参数的 typeit 示例: {{\u003c typeit group=paragraph \u003e}} **首先**, 这个段落开始 {{\u003c /typeit \u003e}} {{\u003c typeit group=paragraph \u003e}} **然后**, 这个段落开始 {{\u003c /typeit \u003e}} 呈现的输出效果如下: ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:11:3","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#code-content"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rscript script shortcode 用来在你的文章中插入  Javascript 脚本. 注意\r脚本内容可以保证在所有的第三方库加载之后按顺序执行. 所以你可以自由地使用第三方库.\r一个 script 示例: {{\u003c script \u003e}} console.log('Just DoIt!'); {{\u003c /script \u003e}} 你可以在开发者工具的控制台中看到输出. ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:12:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#script"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rfriend friend shortcode 用来在你的页面上插入友链. friend shortcode 有以下命名参数: name [必需] (第一个位置参数) 友站的名称. url [必需] (第二个位置参数) 友站的链接. avatar [必需] (第三个位置参数) 友站的头像. bio [必需] (第四个位置参数) 友站的简介. 一个 friend 示例: {{\u003c friend \"PCloud\" \"https://github.com/HEIGE-PCloud/\" \"https://avatars.githubusercontent.com/u/52968553?v=4\" \"This is PCloud~💤\" \u003e}} 或者 {{\u003c friend name=\"PCloud\" url=\"https://github.com/HEIGE-PCloud/\" avatar=\"https://avatars.githubusercontent.com/u/52968553?v=4\" bio=\"This is PCloud~💤\" \u003e}} 呈现的输出效果如下: PCloud\rThis is PCloud~💤 ","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:13:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#friend"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rshowcase showcase 用于在页面上插入一个个人项目的展示柜. showcase shortcode 有以下命名参数: title [required] (第一个位置参数) 项目名称. summary [required] (第二个位置参数) 项目简介. image [required] (第三个位置参数) 预览图的链接. link [required] (第四个位置参数) 项目主页的链接. column [optional] (fifth positional parameter) 这个参数定义一行显示几个 showcase. 默认的值是 2, 默认一行显示两个 showcase. 你可以将它改为 1, 2 或 3. 需要注意的是, 当用户使用小屏幕访问网站时, 每行显示的 showcase 数量将会被自动调整以保证最好的体验. 一个 showcase 示例: {{\u003c showcase title=\"Theme Documentation - Basics\" summary=\"Discover what the Hugo - DoIt theme is all about and the core-concepts behind it.\" image=\"/theme-documentation-basics/featured-image.webp\" link=\"/theme-documentation-basics\" \u003e}} Or {{\u003c showcase \"Theme Documentation - Basics\" \"Discover what the Hugo - DoIt theme is all about and the core-concepts behind it.\" \"/theme-documentation-basics/featured-image.webp\" \"/theme-documentation-basics\" \u003e}} 呈现的输出效果如下: 主题文档 - 基本概念\r探索 Hugo - DoIt 主题的全部内容和背后的核心概念.\r阅读全文\r","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:14:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#showcase"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rmath math 用于插入数学公式. 它可以阻止 Goldmark 将数学表达式中的特殊字符解析为 HTML 从而避免很多问题. 在 math 中, 你不再需要转义特殊字符. 一个 math 示例: {{\u003c math \u003e}}$\\|\\boldsymbol{x}\\|_{0}=\\sqrt[0]{\\sum_{i} x_{i}^{0}}${{\u003c /math \u003e}} Or {{\u003c math \u003e}} $$\\|\\boldsymbol{x}\\|_{0}=\\sqrt[0]{\\sum_{i} x_{i}^{0}}$$ {{\u003c /math \u003e}} 呈现的输出效果如下: $\\|\\boldsymbol{x}\\|_{0}=\\sqrt[0]{\\sum_{i} x_{i}^{0}}$ $$\\|\\boldsymbol{x}\\|_{0}=\\sqrt[0]{\\sum_{i} x_{i}^{0}}$$","date":"2020-03-06","objectID":"/theme-documentation-extended-shortcodes/:15:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 扩展 Shortcodes","uri":"/theme-documentation-extended-shortcodes/#math"},{"categories":["Hugo安装\u0026基本配置"],"content":"Hugo 提供了多个内置的 Shortcodes, 以方便作者保持 Markdown 内容的整洁.","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["Hugo安装\u0026基本配置"],"content":"Hugo 提供了多个内置的 Shortcodes, 以方便作者保持 Markdown 内容的整洁. Hugo 使用 Markdown 为其简单的内容格式. 但是, Markdown 在很多方面都无法很好地支持. 你可以使用纯 HTML 来扩展可能性. 但这恰好是一个坏主意. 大家使用 Markdown, 正是因为它即使不经过渲染也可以轻松阅读. 应该尽可能避免使用 HTML 以保持内容简洁. 为了避免这种限制, Hugo 创建了 shortcodes. shortcode 是一个简单代码段, 可以生成合理的 HTML 代码, 并且符合 Markdown 的设计哲学. Hugo 附带了一组预定义的 shortcodes, 它们实现了一些非常常见的用法. 提供这些 shortcodes 是为了方便保持你的 Markdown 内容简洁. ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:0:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rfigurefigure 的文档 一个 figure 示例: {{\u003c figure src=\"/images/lighthouse.webp\" title=\"Lighthouse (figure)\" \u003e}} 呈现的输出效果如下: Lighthouse (figure) 输出的 HTML 看起来像这样: \u003cfigure\u003e \u003cimg src=\"/images/lighthouse.webp\"/\u003e \u003cfigcaption\u003e \u003ch4\u003eLighthouse (figure)\u003c/h4\u003e \u003c/figcaption\u003e \u003c/figure\u003e ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:1:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#figure"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rgistgist 的文档 一个 gist 示例: {{\u003c gist spf13 7896402 \u003e}} 呈现的输出效果如下: 输出的 HTML 看起来像这样: \u003cscript type=\"application/javascript\" src=\"https://gist.github.com/spf13/7896402.js\"\u003e\u003c/script\u003e ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:2:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#gist"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rhighlighthighlight 的文档 一个 highlight 示例: {{\u003c highlight html \u003e}} \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e {{\u003c /highlight \u003e}} 呈现的输出效果如下: \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:3:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#highlight"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rparamparam 的文档 一个 param 示例: {{\u003c param description \u003e}} 呈现的输出效果如下: Hugo 提供了多个内置的 Shortcodes, 以方便作者保持 Markdown 内容的整洁. ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:4:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#param"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rref 和 relrefref 和 relref 的文档 ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:5:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#ref-and-relref"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rtweettweet 的文档 一个 tweet 示例: {{\u003c tweet user=\"SanDiegoZoo\" id=\"1453110110599868418\" \u003e}} Owl bet you'll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC — San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:6:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#tweet"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rvimeovimeo 的文档 一个 vimeo 示例: {{\u003c vimeo 146022717 \u003e}} 呈现的输出效果如下: ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:7:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#vimeo"},{"categories":["Hugo安装\u0026基本配置"],"content":"\ryoutubeyoutube 的文档 一个 youtube 示例: {{\u003c youtube w7Ft2ymGmfc \u003e}} 呈现的输出效果如下: ","date":"2020-03-05","objectID":"/theme-documentation-built-in-shortcodes/:8:0","series":["Hugo基本配置"],"tags":["shortcodes","Hugo"],"title":"主题文档 - 内置 Shortcodes","uri":"/theme-documentation-built-in-shortcodes/#youtube"},{"categories":["Hugo安装\u0026基本配置"],"content":"了解如何在 DoIt 主题中快速, 直观地创建和组织内容.","date":"2020-03-04","objectID":"/theme-documentation-content/","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/"},{"categories":["Hugo安装\u0026基本配置"],"content":"了解如何在 DoIt 主题中快速, 直观地创建和组织内容. ","date":"2020-03-04","objectID":"/theme-documentation-content/:0:0","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r内容组织以下是一些方便你清晰管理和生成文章的目录结构建议: 保持博客文章存放在 content/posts 目录, 例如: content/posts/我的第一篇文章.md 保持简单的静态页面存放在 content 目录, 例如: content/about.md 本地资源组织 本地资源引用\r有三种方法来引用图片和音乐等本地资源: 使用页面包中的页面资源. 你可以使用适用于 Resources.GetMatch 的值或者直接使用相对于当前页面目录的文件路径来引用页面资源. 将本地资源放在 assets 目录中, 默认路径是 /assets. 引用资源的文件路径是相对于 assets 目录的. 将本地资源放在 static 目录中, 默认路径是 /static. 引用资源的文件路径是相对于 static 目录的. 引用的优先级符合以上的顺序. 在这个主题中的很多地方可以使用上面的本地资源引用, 例如 链接, 图片, image shortcode, music shortcode 和前置参数中的部分参数. 页面资源或者 assets 目录中的图片处理会在未来的版本中得到支持. 非常酷的功能! ","date":"2020-03-04","objectID":"/theme-documentation-content/:1:0","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#contents-organization"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r作者配置我们鼓励你在 mysite/data/authors 下创建你的作者个人资料 author_name.toml. 在你的资料中, 你可以添加个人链接, 邮箱, 以及支持 i18n 的姓名. 以下是 Alice.toml 的示例: link = \"https://alice.example.com\" email = \"alice@example.com\" name = \"Alice\" [zh-cn] name = \"爱丽丝\" 在创建作者个人资料后, 您可以在文章的前置参数中指定您的姓名. 之后, 该文章将自动著上你的名字, 并可以根据作者进行分类. --- authors: [Alice] --- 您也可以为一篇文章注明多个作者. --- authors: [Alice, Bob, Catherine] --- ","date":"2020-03-04","objectID":"/theme-documentation-content/:2:0","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#author-setup"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r前置参数Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数. 注意\r不是所有的以下前置参数都必须在你的每篇文章中设置. 只有在文章的参数和你的 网站设置 中的 page 部分不一致时才有必要这么做.\r这是一个前置参数例子: --- title: \"我的第一篇文章\" subtitle: \"\" date: 2020-03-04T15:58:26+08:00 lastmod: 2020-03-04T15:58:26+08:00 draft: true authors: [] description: \"\" license: \"\" images: [] tags: [] categories: [] series: [] series_weight: 1 seriesNavigation: true featuredImage: \"\" featuredImagePreview: \"\" hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true linkToMarkdown: true linkToSource: false linkToEdit: false linkToReport: false rssFullText: false license: '' toc: enable: true auto: true code: copy: true # ... table: sort: true # ... math: enable: true # ... mapbox: accessToken: \"\" # ... share: enable: true # ... comment: enable: true # ... library: css: # someCSS = \"some.css\" # 位于 \"assets/\" # 或者 # someCSS = \"https://cdn.example.com/some.css\" js: # someJS = \"some.js\" # 位于 \"assets/\" # 或者 # someJS = \"https://cdn.example.com/some.js\" seo: images: [] # ... outdatedArticleReminder: enable: false # ... sponsor: enable: false # ... related: enable: false count: 5 --- title: 文章标题. subtitle: 文章副标题. date: 这篇文章创建的日期时间. 它通常是从文章的前置参数中的 date 字段获取的, 但是也可以在 网站配置 中设置. lastmod: 上次修改内容的日期时间. draft: 如果设为 true, 除非 hugo 命令使用了 --buildDrafts/-D 参数, 这篇文章不会被渲染. authors: 文章作者. description: 文章内容的描述. license: 这篇文章特殊的许可. images: 页面图片, 用于 Open Graph 和 Twitter Cards. tags: 文章的标签. categories: 文章所属的类别. series: 文章所属的系列. series_weight: 自定义文章在系列中的位置. seriesNavigation: 是否使用系列导航. featuredImage: 文章的特色图片. featuredImagePreview: 用在主页预览的文章特色图片. hiddenFromHomePage: 如果设为 true, 这篇文章将不会显示在主页上. hiddenFromSearch: 如果设为 true, 这篇文章将不会显示在搜索结果中. twemoji: 如果设为 true, 这篇文章会使用 twemoji. lightgallery: 如果设为 true, 文章中的图片将可以按照画廊形式呈现. ruby: 如果设为 true, 这篇文章会使用 上标注释扩展语法. fraction: 如果设为 true, 这篇文章会使用 分数扩展语法. fontawesome: 如果设为 true, 这篇文章会使用 Font Awesome 扩展语法. linkToMarkdown: 如果设为 true, 内容的页脚将显示指向原始 Markdown 文件的链接. linkToSource: 如果设为 false, 则关闭页脚 view source 的链接. 你可以将其设置为一个指向文章原始文件的链接. 使用魔法变量 {path} 来获取文章的相对路径, 这篇文章的 {path} 是 posts/theme-documentation-content/index.en.md. linkToEdit: 如果设为 false, 则关闭页脚 编辑此页 的链接. 你可以将其设置为一个用于编辑这个页面的链接. 使用魔法变量 {path} 来获取这篇文章的相对路径, 这篇文章的 {path} 是 posts/theme-documentation-content/index.zh-cn.md. linkToReport: 如果设为 false, 则关闭页脚 报告问题 的链接. 你可以将其设置为一个用于报告此页面中错误的链接. 使用魔法变量 {path} 来获取文章的相对路径, 这篇文章的 {path} 是 posts/theme-documentation-content/index.en.md, 使用 {title} 来获取文章的标题, 这篇文章的 {title} 为 Theme Documentation - Content, 使用 {url} 来获取文章的链接, 这篇文章的 {url} 为 https://hugodoit.pages.dev/theme-documentation-content/. rssFullText: 如果设为 true, 在 RSS 中将会显示全文内容. enableLastMod: 如果设为 true，在文章的顶部将会显示上次修改内容的日期时间. enableWordCount: 如果设为 true, 在文章的顶部将会显示文章的字数. enableReadingTime: 如果设为 true, 在文章的顶部将会显示文章的阅读时间. license: 许可协议信息 (支持 HTML 格式). toc: 和 网站配置 中的 params.page.toc 部分相同. code: 和 网站配置 中的 params.page.code 部分相同. table: 和 网站配置 中的 params.page.table 部分相同. math: 和 网站配置 中的 params.page.math 部分相同. mapbox: 和 网站配置 中的 params.page.mapbox 部分相同. share: 和 网站配置 中的 params.page.share 部分相同. comment: 和 网站配置 中的 params.page.comment 部分相同. library: 和 网站配置 中的 params.page.library 部分相同. seo: 和 网站配置 中的 params.page.seo 部分相同. outdatedArticleReminder: 和 网站配置 中的 params.page.outdatedArticleReminder 部分相同. sponsor: 和 网站配置 中的 params.sponsor 部分相同. related: 和 网站配置 中的 params.page.related 部分相同. 技巧\rfeaturedImage 和 featuredImagePreview 支持本地资源引用的完整用法. 如果带有在前置参数中设置了 name: featured-image 或 name: featured-image-preview 属性的页面资源, 没有必要在设置 featuredImage 或 featuredImagePreview: resources: - name: featured-image src: featured-image.jpg - name: featured-image-preview src: featured-image-preview.jpg ","date":"2020-03-04","objectID":"/theme-documentation-content/:3:0","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#front-matter"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r内容摘要DoIt 主题使用内容摘要在主页中显示大致文章信息. Hugo 支持生成文章的摘要. 文章摘要预览\r","date":"2020-03-04","objectID":"/theme-documentation-content/:4:0","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#内容摘要"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r自动摘要拆分默认情况下, Hugo 自动将内容的前 70 个单词作为摘要. 你可以通过在 网站配置 中设置 summaryLength 来自定义摘要长度. 如果您要使用 CJK中文/日语/韩语 语言创建内容, 并且想使用 Hugo 的自动摘要拆分功能, 请在 网站配置 中将 hasCJKLanguage 设置为 true. ","date":"2020-03-04","objectID":"/theme-documentation-content/:4:1","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#自动摘要拆分"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r手动摘要拆分另外, 你也可以添加 \u003c!--more--\u003e 摘要分割符来拆分文章生成摘要. 摘要分隔符之前的内容将用作该文章的摘要. 注意\r请小心输入\u003c!--more--\u003e ; 即全部为小写且没有空格.\r","date":"2020-03-04","objectID":"/theme-documentation-content/:4:2","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#手动摘要拆分"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r前置参数摘要你可能希望摘要不是文章开头的文字. 在这种情况下, 你可以在文章前置参数的 summary 变量中设置单独的摘要. ","date":"2020-03-04","objectID":"/theme-documentation-content/:4:3","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#前置参数摘要"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r使用文章描述作为摘要你可能希望将文章前置参数中的 description 变量的内容作为摘要. 你仍然需要在文章开头添加 \u003c!--more--\u003e 摘要分割符. 将摘要分隔符之前的内容保留为空. 然后 DoIt 主题会将你的文章描述作为摘要. ","date":"2020-03-04","objectID":"/theme-documentation-content/:4:4","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#使用文章描述作为摘要"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r摘要选择的优先级顺序由于可以通过多种方式指定摘要, 因此了解顺序很有用. 如下: 如果文章中有 \u003c!--more--\u003e 摘要分隔符, 但分隔符之前没有内容, 则使用描述作为摘要. 如果文章中有 \u003c!--more--\u003e 摘要分隔符, 则将按照手动摘要拆分的方法获得摘要. 如果文章前置参数中有摘要变量, 那么将以该值作为摘要. 按照自动摘要拆分方法. 注意\r不建议在摘要内容中包含富文本块元素, 这会导致渲染错误. 例如代码块, 图片, 表格等.\r","date":"2020-03-04","objectID":"/theme-documentation-content/:4:5","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#摘要选择的优先级顺序"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rMarkdown 基本语法这部分内容在 Markdown 基本语法页面 中介绍. ","date":"2020-03-04","objectID":"/theme-documentation-content/:5:0","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#markdown-基本语法"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rMarkdown 扩展语法DoIt 主题提供了一些扩展的语法便于你撰写文章. ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:0","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#extended-markdown-syntax"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rEmoji 支持这部分内容在 Emoji 支持页面 中介绍. ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:1","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#emoji-支持"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r数学公式DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧\r有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单.\r公式块默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧\r你可以在 网站配置 中自定义公式块和行内公式的分割符.\r信息\r你可以使用 math shortcode 以避免特殊字符造成问题.\rCopy-texCopy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchemmhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:2","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#数学公式"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r数学公式DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧\r有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单.\r公式块默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧\r你可以在 网站配置 中自定义公式块和行内公式的分割符.\r信息\r你可以使用 math shortcode 以避免特殊字符造成问题.\rCopy-texCopy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchemmhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:2","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#公式块"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r数学公式DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧\r有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单.\r公式块默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧\r你可以在 网站配置 中自定义公式块和行内公式的分割符.\r信息\r你可以使用 math shortcode 以避免特殊字符造成问题.\rCopy-texCopy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchemmhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:2","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#行内公式"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r数学公式DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧\r有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单.\r公式块默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧\r你可以在 网站配置 中自定义公式块和行内公式的分割符.\r信息\r你可以使用 math shortcode 以避免特殊字符造成问题.\rCopy-texCopy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchemmhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:2","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#copy-tex"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r数学公式DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧\r有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单.\r公式块默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧\r你可以在 网站配置 中自定义公式块和行内公式的分割符.\r信息\r你可以使用 math shortcode 以避免特殊字符造成问题.\rCopy-texCopy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchemmhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:2","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#mhchem"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r字符注音或者注释DoIt 主题支持一种 字符注音或者注释 Markdown 扩展语法: [Hugo]^(一个开源的静态网站生成工具) 呈现的输出效果如下: Hugo一个开源的静态网站生成工具 ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:3","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#ruby"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r分数 DoIt 主题支持一种 分数 Markdown 扩展语法: [浅色]/[深色] [99]/[100] 呈现的输出效果如下: 浅色/深色 90/100 ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:4","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#fraction"},{"categories":["Hugo安装\u0026基本配置"],"content":"\rFont AwesomeDoIt 主题使用 Font Awesome 作为图标库. 你同样可以在文章中轻松使用这些图标. 从 Font Awesome 网站 上获取所需的图标 class. 去露营啦! :(fas fa-campground fa-fw): 很快就回来. 真开心! :(far fa-grin-tears): 呈现的输出效果如下: 去露营啦!  很快就回来. 真开心! ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:5","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#fontawesome"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r转义字符在某些特殊情况下 (编写这个主题文档时 ), 你的文章内容会与 Markdown 的基本或者扩展语法冲突, 并且无法避免. 转义字符语法可以帮助你渲染出想要的内容: {?X} -\u003e X 例如, 两个 : 会启用 emoji 语法. 但有时候这不是你想要的结果. 可以像这样使用转义字符语法: {?:}joy: 呈现的输出效果如下: :joy: 而不是 :joy: 技巧\r这个方法可以间接解决一个还未解决的 Hugo 的 issue.\r另一个例子是: [link{?]}(#escape-character) 呈现的输出效果如下: [link](#escape-character) 而不是 link. ","date":"2020-03-04","objectID":"/theme-documentation-content/:6:6","series":["Hugo基本配置"],"tags":["content","Markdown","Hugo"],"title":"主题文档 - 内容","uri":"/theme-documentation-content/#escape-character"},{"categories":["Hugo安装\u0026基本配置"],"content":"探索 Hugo - DoIt 主题的全部内容和背后的核心概念.","date":"2020-03-03","objectID":"/theme-documentation-basics/","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/"},{"categories":["Hugo安装\u0026基本配置"],"content":"探索 Hugo - DoIt 主题的全部内容和背后的核心概念. ","date":"2020-03-03","objectID":"/theme-documentation-basics/:0:0","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r准备由于 Hugo 提供的便利性, Hugo 本身是这个主题唯一的依赖. 直接安装满足你操作系统 (Windows, Linux, macOS) 的最新版本  Hugo (\u003e 0.83.0). 为什么不支持早期版本的 Hugo?\r由于 WebP 图像处理 在 Hugo 0.83.0版本 中被引入, 本主题只支持高于 0.83.0 的 Hugo 版本.\r推荐使用 Hugo extended 版本\r由于这个主题的一些特性需要将  SCSS 转换为  CSS, 推荐使用 Hugo extended 版本来获得更好的使用体验.\r","date":"2020-03-03","objectID":"/theme-documentation-basics/:1:0","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#准备"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r安装以下步骤可帮助你初始化新网站. 如果你根本不了解 Hugo, 我们强烈建议你按照此 快速入门文档 进一步了解它. ","date":"2020-03-03","objectID":"/theme-documentation-basics/:2:0","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#安装"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r创建你的项目Hugo 提供了一个 new 命令来创建一个新的网站: hugo new site my_website cd my_website ","date":"2020-03-03","objectID":"/theme-documentation-basics/:2:1","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#创建你的项目"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r安装主题DoIt 主题的仓库是: https://github.com/HEIGE-PCloud/DoIt. 你可以下载主题的 最新版本  .zip 文件 并且解压放到 themes 目录. 另外, 也可以直接把这个主题克隆到 themes 目录: git clone https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt 或者, 初始化你的项目目录为 git 仓库, 并且把主题仓库作为你的网站目录的子模块: git init git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt ","date":"2020-03-03","objectID":"/theme-documentation-basics/:2:2","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#安装主题"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r基础配置以下是 DoIt 主题的基本配置: baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] 设置默认的语言 defaultContentLanguage = \"zh-cn\" # 网站语言, 仅在这里 CN 大写 languageCode = \"zh-CN\" # 是否包括中日韩文字 hasCJKLanguage = true # 网站标题 title = \"我的全新 Hugo 网站\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"DoIt\" [params] # DoIt 主题版本 version = \"0.2.X\" [menu] [[menu.main]] identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false 注意\r在构建网站时, 你可以使用 --theme 选项设置主题. 但是, 我建议你修改配置文件 (config.toml) 将本主题设置为默认主题.\r","date":"2020-03-03","objectID":"/theme-documentation-basics/:2:3","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#basic-configuration"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r创建你的第一篇文章以下是创建第一篇文章的方法: hugo new posts/first_post.md 通过添加一些示例内容并替换文件开头的标题, 你可以随意编辑文章. 注意\r默认情况下, 所有文章和页面均作为草稿创建. 如果想要渲染这些页面, 请从元数据中删除属性 draft: true, 设置属性 draft: false 或者为 hugo 命令添加 -D/--buildDrafts 参数.\r","date":"2020-03-03","objectID":"/theme-documentation-basics/:2:4","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#创建你的第一篇文章"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r在本地启动网站使用以下命令启动网站: hugo serve 去查看 http://localhost:1313. 基本配置下的预览\r技巧\r当你运行 hugo serve 时, 当文件内容更改时, 页面会随着更改自动刷新.\r注意\r由于本主题使用了 Hugo 中的 .Scratch 来实现一些特性, 非常建议你为 hugo server 命令添加 --disableFastRender 参数来实时预览你正在编辑的文章页面. hugo serve --disableFastRender ","date":"2020-03-03","objectID":"/theme-documentation-basics/:2:5","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#在本地启动网站"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r构建网站当你准备好部署你的网站时, 运行以下命令: hugo 会生成一个 public 目录, 其中包含你网站的所有静态内容和资源. 现在可以将其部署在任何 Web 服务器上. 技巧\r网站内容可以通过 Netlify 自动发布和托管 (了解有关通过 Netlify 进行 HUGO 自动化部署 的更多信息). 或者, 您可以使用 AWS Amplify, Github pages, Render 以及更多…\r","date":"2020-03-03","objectID":"/theme-documentation-basics/:2:6","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#构建网站"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r配置","date":"2020-03-03","objectID":"/theme-documentation-basics/:3:0","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#配置"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r网站配置除了 Hugo 全局配置 和 菜单配置 之外, DoIt 主题还允许您在网站配置中定义以下参数 (这是一个示例 config.toml, 其内容为默认值). 请打开下面的代码块查看完整的示例配置 : [params] # DoIt 主题版本 version = \"0.3.X\" # 网站名称 title = \"我的全新 Hugo 网站\" # 网站描述 description = \"这是我的全新 Hugo 网站\" # 网站关键词 keywords = [\"Theme\", \"Hugo\"] # 网站默认主题样式 (\"light\", \"dark\", \"black\", \"auto\") defaultTheme = \"auto\" # 公共 git 仓库路径, 仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # (\"sha256\", \"sha384\", \"sha512\", \"md5\") fingerprint = \"\" # 日期格式 dateFormat = \"2006-01-02\" # 网站图片, 用于 Open Graph 和 Twitter Cards images = [\"/logo.png\"] # 开启 PWA 支持 enablePWA = false # [试验性功能] 缓存图床图片，详情请见：https://github.com/HEIGE-PCloud/DoIt/pull/860#issue-1574342372 cacheRemoteImages = false # 版权信息 license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \"DoIt\" # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \"\" # Safari 图标颜色 iconColor = \"#5bbad5\" # Windows v8-10磁贴颜色 tileColor = \"#da532c\" # 搜索配置 [params.search] enable = true # 搜索引擎的类型 (\"algolia\", \"fuse\") type = \"fuse\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" [params.search.fuse] # https://fusejs.io/api/options.html isCaseSensitive = false minMatchCharLength = 2 findAllMatches = false location = 0 threshold = 0.3 distance = 100 ignoreLocation = false useExtendedSearch = false ignoreFieldNorm = false # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 (\"fixed\", \"normal\", \"auto\") desktopMode = \"fixed\" # 移动端导航栏模式 (\"fixed\", \"normal\", \"auto\") mobileMode = \"auto\" # 主题切换模式 # 主题切换模式 (\"switch\", \"select\") themeChangeMode = \"select\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"\" # 标题名称 name = \"\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = '' # 是否显示 Hugo 和主题信息 hugo = true # 托管服务信息 (支持 HTML 格式) # \u003ca title=\"Github Pages\" href=\"https://docs.github.com/en/pages/\" target=\"_blank\" rel=\"noopener noreffer\"\u003eGitHub Pages\u003c/a\u003e hostedOn = '' # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2019 # ICP 备案信息, 仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (所有文章) 页面配置 [params.section] # section 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 最近更新文章设置 [params.section.recentlyUpdated] enable = false rss = false days = 30 maxCount = 10 # List (目录或标签) 页面配置 [params.list] # list 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱, 用于优先在主页显示的头像 gravatarEmail = \"\" # 主页显示头像的 URL # 将你的头像文件放置于 static 或者 assets 目录下 # 文件路径是相对于 static 或者 assets 目录的 avatarURL = \"/images/avatar.webp\" # 头像的链接指向的 URL avatarLinkURL = \"\" # 主页显示的网站标题 (支持 HTML 格式) title = \"\" # 主页显示的网站副标题 subtitle = \"这是我的全新 Hugo 网站\" # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # 免责声明 (支持 HTML 格式) disclaimer = \"\" # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # 被 params.page 中的 hiddenFromHomePage 替代 # 当你没有在文章前置参数中设置 \"hiddenFromHomePage\" 时的默认行为 defaultHiddenFromHomePage = false # 作者的社交信息设置 [params.social] GitHub = \"xxxx\" Linkedin = \"\" Twitter = \"xxxx\" Instagram = \"xxxx\" Facebook = \"xxxx\" Telegram = \"xxxx\" Medium = \"\" Gitlab = \"\" Youtubelegacy = \"\" Youtubecustom = \"\" Youtubechannel = \"\" Tumblr = \"\" Quora = \"\" Keybase = \"\" Pinterest = \"\" Reddit = \"\" Codepen = \"\" FreeCodeCamp = \"\" Bitbucket = \"\" Stackoverflow = \"\" Weibo = \"\" Odno","date":"2020-03-03","objectID":"/theme-documentation-basics/:3:1","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#site-configuration"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r网站图标, 浏览器配置, 网站清单强烈建议你把: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) 放在 /static 目录. 利用 https://realfavicongenerator.net/ 可以很容易地生成这些文件. 可以自定义 browserconfig.xml 和 site.webmanifest 文件来设置 theme-color 和 background-color. ","date":"2020-03-03","objectID":"/theme-documentation-basics/:3:2","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#网站图标-浏览器配置-网站清单"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r自定义样式 注意\rHugo extended 版本对于自定义样式是必需的.\r通过定义自定义 .scss 样式文件, DoIt 主题支持可配置的样式. 包含自定义 .scss 样式文件的目录相对于 你的项目根目录 的路径为 assets/css. 在 assets/css/_override.scss 中, 你可以覆盖 themes/DoIt/assets/css/_variables.scss 中的变量以自定义样式. 这是一个例子: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; 在 assets/css/_custom.scss 中, 你可以添加一些 CSS 样式代码以自定义样式. ","date":"2020-03-03","objectID":"/theme-documentation-basics/:3:3","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#自定义样式"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r多语言和 i18nDoIt 主题完全兼容 Hugo 的多语言模式, 并且支持在网页上切换语言. 语言切换\r","date":"2020-03-03","objectID":"/theme-documentation-basics/:4:0","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#多语言和-i18n"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r兼容性 语言 Hugo 代码 HTML lang 属性 主题文档 英语 en en 简体中文 zh-cn zh-CN 法语 fr fr 波兰语 pl pl 巴西葡萄牙语 pt-br pt-BR 意大利语 it it 西班牙语 es es 德语 de de 塞尔维亚语 pl pl 俄语 ru ru 罗马尼亚语 ro ro 越南语 vi vi Arabic ar ar Catalan ca ca Hindi hi hi Indonesian id id Telugu te te Thai th th Turkish tr tr Ukrainian uk uk Traditional Chinese zh-tw zh-tw ","date":"2020-03-03","objectID":"/theme-documentation-basics/:4:1","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#language-compatibility"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r基本配置学习了 Hugo如何处理多语言网站 之后, 请在 站点配置 中定义你的网站语言. 例如, 一个支持英语, 中文和法语的网站配置: # [en, zh-cn, fr, pl, ...] 设置默认的语言 defaultContentLanguage = \"zh-cn\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" weight = 1 [[languages.en.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" weight = 2 [[languages.en.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" # 网站语言, 仅在这里 CN 大写 languageCode = \"zh-CN\" languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true [[languages.zh-cn.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" weight = 1 [[languages.zh-cn.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[languages.zh-cn.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 然后, 对于每个新页面, 将语言代码附加到文件名中. 单个文件 my-page.md 需要分为两个文件: 英语: my-page.en.md 中文: my-page.zh-cn.md 注意\r请注意, 菜单中仅显示翻译的页面. 它不会替换为默认语言内容.\r技巧\r也可以使用 文章前置参数 来翻译网址.\r","date":"2020-03-03","objectID":"/theme-documentation-basics/:4:2","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#基本配置"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r修改默认的翻译字符串翻译字符串用于在主题中使用的常见默认值. 目前提供一些语言的翻译, 但你可能自定义其他语言或覆盖默认值. 要覆盖默认值, 请在你项目的 i18n 目录 i18n/\u003clanguageCode\u003e.toml 中创建一个新文件, 并从 themes/DoIt/i18n/en.toml 中获得提示. 另外, 由于你的翻译可能会帮助到其他人, 请花点时间通过  创建一个 PR 来贡献主题翻译, 谢谢! ","date":"2020-03-03","objectID":"/theme-documentation-basics/:4:3","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#修改默认的翻译字符串"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r搜索 基于 Lunr.js 或 algolia, DoIt 主题支持搜索功能. ","date":"2020-03-03","objectID":"/theme-documentation-basics/:5:0","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#搜索"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r输出配置为了生成搜索功能所需要的 index.json, 请在你的 网站配置 中添加 JSON 输出文件类型到 outputs 部分的 home 字段中. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2020-03-03","objectID":"/theme-documentation-basics/:5:1","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#输出配置"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r搜索配置基于 Hugo 生成的 index.json 文件, 你可以激活搜索功能. 这是你的 网站配置 中的搜索部分: [params.search] enable = true # 搜索引擎的类型 (\"algolia\", \"fuse\") type = \"fuse\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" [params.search.fuse] # https://fusejs.io/api/options.html isCaseSensitive = false minMatchCharLength = 2 findAllMatches = false location = 0 threshold = 0.3 distance = 100 ignoreLocation = false useExtendedSearch = false ignoreFieldNorm = false 怎样选择搜索引擎?\r以下是两种搜索引擎的对比: fuse: 简单, 无需同步 index.json, 没有 contentLength 的限制, 性能高 algolia: 高性能并且占用带宽低, 但需要同步 index.json 且有 contentLength 的限制 文章内容被 h2 和 h3 HTML 标签切分来提高查询效果并且基本实现全文搜索. contentLength 用来限制 h2 和 h3 HTML 标签开头的内容部分的最大长度. 关于 algolia 的使用技巧\r你需要上传 index.json 到 algolia 来激活搜索功能. 你可以使用浏览器来上传 index.json 文件但是一个自动化的脚本可能效果更好. Algolia Atomic 是一个不错的选择. 为了兼容 Hugo 的多语言模式, 你需要上传不同语言的 index.json 文件到对应的 algolia index, 例如 zh-cn/index.json 或 fr/index.json…\r","date":"2020-03-03","objectID":"/theme-documentation-basics/:5:2","series":["Hugo基本配置"],"tags":["installation","configuration","Hugo"],"title":"主题文档 - 基本概念","uri":"/theme-documentation-basics/#搜索配置"},{"categories":["Hugo安装\u0026基本配置"],"content":"这篇文章展示了基本的 Markdown 语法和格式.","date":"2019-12-01","objectID":"/basic-markdown-syntax/","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/"},{"categories":["Hugo安装\u0026基本配置"],"content":"这篇文章提供了可以在 Hugo 的文章中使用的基本 Markdown 语法示例. 注意\r这篇文章借鉴了一篇很棒的来自 Grav 的文章. 如果你想了解 DoIt 主题的扩展 Markdown 语法, 请阅读扩展 Markdown 语法页面. 事实上, 编写 Web 内容很麻烦. WYSIWYG所见即所得 编辑器帮助减轻了这一任务. 但通常会导致代码太糟, 或更糟糕的是, 网页也会很丑. 没有通常伴随的所有复杂和丑陋的问题, Markdown 是一种更好的生成 HTML 内容的方式. 一些主要好处是: Markdown 简单易学, 几乎没有多余的字符, 因此编写内容也更快. 用 Markdown 书写时出错的机会更少. 可以产生有效的 XHTML 输出. 将内容和视觉显示保持分开, 这样就不会打乱网站的外观. 可以在你喜欢的任何文本编辑器或 Markdown 应用程序中编写内容. Markdown 使用起来很有趣! John Gruber, Markdown 的作者如是说: Markdown 格式的首要设计目标是更具可读性. 最初的想法是 Markdown 格式的文档应当以纯文本形式发布, 而不会看起来像被标签或格式说明所标记. 虽然 Markdown 的语法受到几种现有的文本到 HTML 转换工具的影响, 但 Markdown 语法的最大灵感来源是纯文本电子邮件的格式. – John Gruber 话不多说, 我们来回顾一下 Markdown 的主要语法以及生成的 HTML 样式! 技巧\r 将此页保存为书签, 以备将来参考!\r","date":"2019-12-01","objectID":"/basic-markdown-syntax/:0:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r标题从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的 HTML 看起来像这样: \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 标题 ID\r要添加自定义标题 ID, 请在与标题相同的行中将自定义 ID 放在花括号中: ### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样: \u003ch3 id=\"custom-id\"\u003e一个很棒的标题\u003c/h3\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:1:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#标题"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r注释注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释: ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:2:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#注释"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r水平线HTML 中的 \u003chr\u003e 标签是用来在段落元素之间创建一个 “专题间隔” 的. 使用 Markdown, 你可以用以下方式创建一个 \u003chr\u003e 标签: ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 呈现的输出效果如下: ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:3:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#水平线"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r段落按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u003cp\u003e/\u003c/p\u003e 标签包裹. 如下段落: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行. ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:4:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#段落"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r内联 HTML 元素如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用: Markdown 格式的段落. \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落. ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:5:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#内联-html-元素"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r强调","date":"2019-12-01","objectID":"/basic-markdown-syntax/:6:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#强调"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r加粗用于强调带有较粗字体的文本片段. 以下文本片段会被 渲染为粗体. **渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样: \u003cstrong\u003e渲染为粗体\u003c/strong\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:6:1","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#加粗"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r斜体用于强调带有斜体的文本片段. 以下文本片段被 渲染为斜体. *渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样: \u003cem\u003e渲染为斜体\u003c/em\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:6:2","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#斜体"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r删除线按照 GFMGitHub flavored Markdown 你可以使用删除线. ~~这段文本带有删除线.~~ 呈现的输出效果如下: 这段文本带有删除线. 输出的 HTML 看起来像这样: \u003cdel\u003e这段文本带有删除线.\u003c/del\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:6:3","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#删除线"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r组合加粗, 斜体, 和删除线可以 组合使用. ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下: 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 输出的 HTML 看起来像这样: \u003cem\u003e\u003cstrong\u003e加粗和斜体\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003e删除线和加粗\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e删除线和斜体\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003e加粗, 斜体和删除线\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:6:4","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#组合"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r引用用于在文档中引用其他来源的内容块. 在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 输出的 HTML 看起来像这样: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e 引用也可以嵌套: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:7:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#引用"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r列表","date":"2019-12-01","objectID":"/basic-markdown-syntax/:8:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#列表"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r无序列表一系列项的列表, 其中项的顺序没有明显关系. 你可以使用以下任何符号来表示无序列表中的项: * 一项内容 - 一项内容 + 一项内容 例如: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:8:1","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#无序列表"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r有序列表一系列项的列表, 其中项的顺序确实很重要. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e 技巧\r如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:8:2","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#有序列表"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r任务列表任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框, 请在方括号之间添加 x ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下: Write the press release Update the website Contact the media ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:8:3","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#任务列表"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r代码","date":"2019-12-01","objectID":"/basic-markdown-syntax/:9:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#代码"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r行内代码用 ` 包装行内代码段. 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**. 呈现的输出效果如下: 在这个例子中, \u003csection\u003e\u003c/section\u003e 会被包裹成 代码. 输出的 HTML 看起来像这样: \u003cp\u003e 在这个例子中, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e 会被包裹成 \u003cstrong\u003e代码\u003c/strong\u003e. \u003c/p\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:9:1","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#行内代码"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r缩进代码将几行代码缩进至少四个空格, 例如: // Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下: // Some comments\rline 1 of code\rline 2 of code\rline 3 of code\r输出的 HTML 看起来像这样: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:9:2","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#缩进代码"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r围栏代码块使用 “围栏” ``` 来生成一段带有语言属性的代码块. ```markdown Sample text here... ``` 输出的 HTML 看起来像这样: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:9:3","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#围栏代码块"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r语法高亮GFMGitHub Flavored Markdown 也支持语法高亮. 要激活它, 只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中. 例如, 在以下 JavaScript 代码中应用语法高亮: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` 呈现的输出效果如下: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; 注意\rHugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode.\r","date":"2019-12-01","objectID":"/basic-markdown-syntax/:9:4","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#语法高亮"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r表格通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 输出的 HTML 看起来像这样: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e 文本右对齐或居中对齐\r在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐. 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:10:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#表格"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r链接","date":"2019-12-01","objectID":"/basic-markdown-syntax/:11:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#links"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上, 没有提示): https://assemble.io contact@revolunet.com Assemble 输出的 HTML 看起来像这样: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:11:1","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#基本链接"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") 呈现的输出效果如下 (将鼠标悬停在链接上, 会有一行提示): Upstage 输出的 HTML 看起来像这样: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:11:2","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#添加一个标题"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r定位标记定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. 注意\r定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了.\r","date":"2019-12-01","objectID":"/basic-markdown-syntax/:11:3","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#定位标记"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r脚注脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容. 要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号. 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置. 这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个带标签的脚注2 ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:12:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#脚注"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r图片图片的语法与链接相似, 但包含一个在前面的感叹号. ![Minion](https://octodex.github.com/images/minion.png) 或者: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The Stormtroopocat\r像链接一样, 图片也具有脚注样式的语法: ![Alt text][id] The Dojocat\r稍后在文档中提供参考内容, 用来定义 URL 的位置: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" 技巧\rDoIt 主题提供了一个包含更多功能的 图片的 shortcode.\r这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2019-12-01","objectID":"/basic-markdown-syntax/:13:0","series":null,"tags":["Markdown","HTML","Hugo"],"title":"Markdown 基本语法","uri":"/basic-markdown-syntax/#图片"},{"categories":["Hugo安装\u0026基本配置"],"content":"Hugo 和 DoIt 中的 Emoji 的用法指南.","date":"2019-10-01","objectID":"/emoji-support/","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/"},{"categories":["Hugo安装\u0026基本配置"],"content":"Emoji 可以通过多种方式在 Hugo 项目中启用. emojify 方法可以直接在模板中调用, 或者使用行内 Shortcodes. 要全局使用 emoji, 需要在你的网站配置中设置 enableEmoji 为 true, 然后你就可以直接在文章中输入 emoji 的代码. 它们以冒号开头和结尾, 并且包含 emoji 的 代码: 去露营啦! :tent: 很快就回来. 真开心! :joy: 呈现的输出效果如下: 去露营啦! :tent: 很快就回来. 真开心! :joy: 以下符号清单是 emoji 代码的非常有用的参考. ","date":"2019-10-01","objectID":"/emoji-support/:0:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r表情与情感","date":"2019-10-01","objectID":"/emoji-support/:1:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#表情与情感"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r笑脸表情 图标 代码 图标 代码 :grinning: grinning :smiley: smiley :smile: smile :grin: grin :laughing: laughing satisfied :sweat_smile: sweat_smile :rofl: rofl :joy: joy :slightly_smiling_face: slightly_smiling_face :upside_down_face: upside_down_face :wink: wink :blush: blush :innocent: innocent ","date":"2019-10-01","objectID":"/emoji-support/:1:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#笑脸表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r爱意表情 图标 代码 图标 代码 :heart_eyes: heart_eyes :kissing_heart: kissing_heart :kissing: kissing :relaxed: relaxed :kissing_closed_eyes: kissing_closed_eyes :kissing_smiling_eyes: kissing_smiling_eyes ","date":"2019-10-01","objectID":"/emoji-support/:1:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#爱意表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r吐舌头表情 图标 代码 图标 代码 :yum: yum :stuck_out_tongue: stuck_out_tongue :stuck_out_tongue_winking_eye: stuck_out_tongue_winking_eye :stuck_out_tongue_closed_eyes: stuck_out_tongue_closed_eyes :money_mouth_face: money_mouth_face ","date":"2019-10-01","objectID":"/emoji-support/:1:3","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#吐舌头表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r带手的表情 图标 代码 图标 代码 :hugs: hugs :thinking: thinking ","date":"2019-10-01","objectID":"/emoji-support/:1:4","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#带手的表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r中性表情 图标 代码 图标 代码 :zipper_mouth_face: zipper_mouth_face :neutral_face: neutral_face :expressionless: expressionless :no_mouth: no_mouth :smirk: smirk :unamused: unamused :roll_eyes: roll_eyes :grimacing: grimacing :lying_face: lying_face ","date":"2019-10-01","objectID":"/emoji-support/:1:5","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#中性表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r困倦的表情 图标 代码 图标 代码 :relieved: relieved :pensive: pensive :sleepy: sleepy :drooling_face: drooling_face :sleeping: sleeping ","date":"2019-10-01","objectID":"/emoji-support/:1:6","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#困倦的表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r不适的表情 图标 代码 图标 代码 :mask: mask :face_with_thermometer: face_with_thermometer :face_with_head_bandage: face_with_head_bandage :nauseated_face: nauseated_face :sneezing_face: sneezing_face :dizzy_face: dizzy_face ","date":"2019-10-01","objectID":"/emoji-support/:1:7","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#不适的表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r戴帽子的表情 图标 代码 图标 代码 :cowboy_hat_face: cowboy_hat_face ","date":"2019-10-01","objectID":"/emoji-support/:1:8","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#戴帽子的表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r戴眼镜的表情 图标 代码 图标 代码 :sunglasses: sunglasses :nerd_face: nerd_face ","date":"2019-10-01","objectID":"/emoji-support/:1:9","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#戴眼镜的表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r担心的表情 图标 代码 图标 代码 :confused: confused :worried: worried :slightly_frowning_face: slightly_frowning_face :frowning_face: frowning_face :open_mouth: open_mouth :hushed: hushed :astonished: astonished :flushed: flushed :frowning: frowning :anguished: anguished :fearful: fearful :cold_sweat: cold_sweat :disappointed_relieved: disappointed_relieved :cry: cry :sob: sob :scream: scream :confounded: confounded :persevere: persevere :disappointed: disappointed :sweat: sweat :weary: weary :tired_face: tired_face ","date":"2019-10-01","objectID":"/emoji-support/:1:10","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#担心的表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r否定的表情 图标 代码 图标 代码 :triumph: triumph :pout: pout rage :angry: angry :smiling_imp: smiling_imp :imp: imp :skull: skull :skull_and_crossbones: skull_and_crossbones ","date":"2019-10-01","objectID":"/emoji-support/:1:11","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#否定的表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r特殊打扮的表情 图标 代码 图标 代码 :hankey: hankey poop shit :clown_face: clown_face :japanese_ogre: japanese_ogre :japanese_goblin: japanese_goblin :ghost: ghost :alien: alien :space_invader: space_invader :robot: robot ","date":"2019-10-01","objectID":"/emoji-support/:1:12","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#特殊打扮的表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r猫脸表情 图标 代码 图标 代码 :smiley_cat: smiley_cat :smile_cat: smile_cat :joy_cat: joy_cat :heart_eyes_cat: heart_eyes_cat :smirk_cat: smirk_cat :kissing_cat: kissing_cat :scream_cat: scream_cat :crying_cat_face: crying_cat_face :pouting_cat: pouting_cat ","date":"2019-10-01","objectID":"/emoji-support/:1:13","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#猫脸表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r猴脸表情 图标 代码 图标 代码 :see_no_evil: see_no_evil :hear_no_evil: hear_no_evil :speak_no_evil: speak_no_evil ","date":"2019-10-01","objectID":"/emoji-support/:1:14","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#猴脸表情"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r情感 图标 代码 图标 代码 :kiss: kiss :love_letter: love_letter :cupid: cupid :gift_heart: gift_heart :sparkling_heart: sparkling_heart :heartpulse: heartpulse :heartbeat: heartbeat :revolving_hearts: revolving_hearts :two_hearts: two_hearts :heart_decoration: heart_decoration :heavy_heart_exclamation: heavy_heart_exclamation :broken_heart: broken_heart :heart: heart :yellow_heart: yellow_heart :green_heart: green_heart :blue_heart: blue_heart :purple_heart: purple_heart :black_heart: black_heart :100: 100 :anger: anger :boom: boom collision :dizzy: dizzy :sweat_drops: sweat_drops :dash: dash :hole: hole :bomb: bomb :speech_balloon: speech_balloon :eye_speech_bubble: eye_speech_bubble :right_anger_bubble: right_anger_bubble :thought_balloon: thought_balloon :zzz: zzz ","date":"2019-10-01","objectID":"/emoji-support/:1:15","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#情感"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r人与身体","date":"2019-10-01","objectID":"/emoji-support/:2:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#人与身体"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r张开手掌的手势 图标 代码 图标 代码 :wave: wave :raised_back_of_hand: raised_back_of_hand :raised_hand_with_fingers_splayed: raised_hand_with_fingers_splayed :hand: hand raised_hand :vulcan_salute: vulcan_salute ","date":"2019-10-01","objectID":"/emoji-support/:2:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#张开手掌的手势"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r部分手指的手势 图标 代码 图标 代码 :ok_hand: ok_hand :v: v :crossed_fingers: crossed_fingers :metal: metal :call_me_hand: call_me_hand ","date":"2019-10-01","objectID":"/emoji-support/:2:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#部分手指的手势"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r一根手指的手势 图标 代码 图标 代码 :point_left: point_left :point_right: point_right :point_up_2: point_up_2 :fu: fu middle_finger :point_down: point_down :point_up: point_up ","date":"2019-10-01","objectID":"/emoji-support/:2:3","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#一根手指的手势"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r握紧的手势 图标 代码 图标 代码 :+1: +1 thumbsup :-1: -1 thumbsdown :fist: fist fist_raised :facepunch: facepunch fist_oncoming punch :fist_left: fist_left :fist_right: fist_right ","date":"2019-10-01","objectID":"/emoji-support/:2:4","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#握紧的手势"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r两只手 图标 代码 图标 代码 :clap: clap :raised_hands: raised_hands :open_hands: open_hands :handshake: handshake :pray: pray ","date":"2019-10-01","objectID":"/emoji-support/:2:5","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#两只手"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r握住东西的手势 图标 代码 图标 代码 :writing_hand: writing_hand :nail_care: nail_care :selfie: selfie ","date":"2019-10-01","objectID":"/emoji-support/:2:6","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#握住东西的手势"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r身体部位 图标 代码 图标 代码 :muscle: muscle :ear: ear :nose: nose :eyes: eyes :eye: eye :tongue: tongue :lips: lips ","date":"2019-10-01","objectID":"/emoji-support/:2:7","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#身体部位"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r人 图标 代码 图标 代码 :baby: baby :boy: boy :girl: girl :blonde_man: blonde_man person_with_blond_hair :man: man :woman: woman :blonde_woman: blonde_woman :older_man: older_man :older_woman: older_woman ","date":"2019-10-01","objectID":"/emoji-support/:2:8","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#人"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r身体动作 图标 代码 图标 代码 :frowning_woman: frowning_woman person_frowning :frowning_man: frowning_man :person_with_pouting_face: person_with_pouting_face pouting_woman :pouting_man: pouting_man :ng_woman: ng_woman no_good no_good_woman :ng_man: ng_man no_good_man :ok_woman: ok_woman :ok_man: ok_man :information_desk_person: information_desk_person sassy_woman tipping_hand_woman :sassy_man: sassy_man tipping_hand_man :raising_hand: raising_hand raising_hand_woman :raising_hand_man: raising_hand_man :bow: bow bowing_man :bowing_woman: bowing_woman :man_facepalming: man_facepalming :woman_facepalming: woman_facepalming :man_shrugging: man_shrugging :woman_shrugging: woman_shrugging ","date":"2019-10-01","objectID":"/emoji-support/:2:9","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#身体动作"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r人物角色 图标 代码 图标 代码 :man_health_worker: man_health_worker :woman_health_worker: woman_health_worker :man_student: man_student :woman_student: woman_student :man_teacher: man_teacher :woman_teacher: woman_teacher :man_judge: man_judge :woman_judge: woman_judge :man_farmer: man_farmer :woman_farmer: woman_farmer :man_cook: man_cook :woman_cook: woman_cook :man_mechanic: man_mechanic :woman_mechanic: woman_mechanic :man_factory_worker: man_factory_worker :woman_factory_worker: woman_factory_worker :man_office_worker: man_office_worker :woman_office_worker: woman_office_worker :man_scientist: man_scientist :woman_scientist: woman_scientist :man_technologist: man_technologist :woman_technologist: woman_technologist :man_singer: man_singer :woman_singer: woman_singer :man_artist: man_artist :woman_artist: woman_artist :man_pilot: man_pilot :woman_pilot: woman_pilot :man_astronaut: man_astronaut :woman_astronaut: woman_astronaut :man_firefighter: man_firefighter :woman_firefighter: woman_firefighter :cop: cop policeman :policewoman: policewoman :detective: detective male_detective :female_detective: female_detective :guardsman: guardsman :guardswoman: guardswoman :construction_worker: construction_worker construction_worker_man :construction_worker_woman: construction_worker_woman :prince: prince :princess: princess :man_with_turban: man_with_turban :woman_with_turban: woman_with_turban :man_with_gua_pi_mao: man_with_gua_pi_mao :man_in_tuxedo: man_in_tuxedo :bride_with_veil: bride_with_veil :pregnant_woman: pregnant_woman ","date":"2019-10-01","objectID":"/emoji-support/:2:10","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#人物角色"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r幻想的人物 图标 代码 图标 代码 :angel: angel :santa: santa :mrs_claus: mrs_claus ","date":"2019-10-01","objectID":"/emoji-support/:2:11","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#幻想的人物"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r人物活动 图标 代码 图标 代码 :massage: massage massage_woman :massage_man: massage_man :haircut: haircut haircut_woman :haircut_man: haircut_man :walking: walking walking_man :walking_woman: walking_woman :runner: runner running running_man :running_woman: running_woman :dancer: dancer :man_dancing: man_dancing :business_suit_levitating: business_suit_levitating :dancers: dancers dancing_women :dancing_men: dancing_men ","date":"2019-10-01","objectID":"/emoji-support/:2:12","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#人物活动"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r体育 图标 代码 图标 代码 :person_fencing: person_fencing :horse_racing: horse_racing :skier: skier :snowboarder: snowboarder :golfing_man: golfing_man :golfing_woman: golfing_woman :surfer: surfer surfing_man :surfing_woman: surfing_woman :rowboat: rowboat rowing_man :rowing_woman: rowing_woman :swimmer: swimmer swimming_man :swimming_woman: swimming_woman :basketball_man: basketball_man :basketball_woman: basketball_woman :weight_lifting_man: weight_lifting_man :weight_lifting_woman: weight_lifting_woman :bicyclist: bicyclist biking_man :biking_woman: biking_woman :mountain_bicyclist: mountain_bicyclist mountain_biking_man :mountain_biking_woman: mountain_biking_woman :man_cartwheeling: man_cartwheeling :woman_cartwheeling: woman_cartwheeling :men_wrestling: men_wrestling :women_wrestling: women_wrestling :man_playing_water_polo: man_playing_water_polo :woman_playing_water_polo: woman_playing_water_polo :man_playing_handball: man_playing_handball :woman_playing_handball: woman_playing_handball :man_juggling: man_juggling :woman_juggling: woman_juggling ","date":"2019-10-01","objectID":"/emoji-support/:2:13","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#体育"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r休息 图标 代码 图标 代码 :bath: bath :sleeping_bed: sleeping_bed ","date":"2019-10-01","objectID":"/emoji-support/:2:14","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#休息"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r家庭 图标 代码 图标 代码 :two_women_holding_hands: two_women_holding_hands :couple: couple :two_men_holding_hands: two_men_holding_hands :couplekiss_man_woman: couplekiss_man_woman :couplekiss_man_man: couplekiss_man_man :couplekiss_woman_woman: couplekiss_woman_woman :couple_with_heart: couple_with_heart couple_with_heart_woman_man :couple_with_heart_man_man: couple_with_heart_man_man :couple_with_heart_woman_woman: couple_with_heart_woman_woman :family: family family_man_woman_boy :family_man_woman_girl: family_man_woman_girl :family_man_woman_girl_boy: family_man_woman_girl_boy :family_man_woman_boy_boy: family_man_woman_boy_boy :family_man_woman_girl_girl: family_man_woman_girl_girl :family_man_man_boy: family_man_man_boy :family_man_man_girl: family_man_man_girl :family_man_man_girl_boy: family_man_man_girl_boy :family_man_man_boy_boy: family_man_man_boy_boy :family_man_man_girl_girl: family_man_man_girl_girl :family_woman_woman_boy: family_woman_woman_boy :family_woman_woman_girl: family_woman_woman_girl :family_woman_woman_girl_boy: family_woman_woman_girl_boy :family_woman_woman_boy_boy: family_woman_woman_boy_boy :family_woman_woman_girl_girl: family_woman_woman_girl_girl :family_man_boy: family_man_boy :family_man_boy_boy: family_man_boy_boy :family_man_girl: family_man_girl :family_man_girl_boy: family_man_girl_boy :family_man_girl_girl: family_man_girl_girl :family_woman_boy: family_woman_boy :family_woman_boy_boy: family_woman_boy_boy :family_woman_girl: family_woman_girl :family_woman_girl_boy: family_woman_girl_boy :family_woman_girl_girl: family_woman_girl_girl ","date":"2019-10-01","objectID":"/emoji-support/:2:15","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#家庭"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r人物符号 图标 代码 图标 代码 :speaking_head: speaking_head :bust_in_silhouette: bust_in_silhouette :busts_in_silhouette: busts_in_silhouette :footprints: footprints ","date":"2019-10-01","objectID":"/emoji-support/:2:16","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#人物符号"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r动物与自然","date":"2019-10-01","objectID":"/emoji-support/:3:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#动物与自然"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r哺乳动物 图标 代码 图标 代码 :monkey_face: monkey_face :monkey: monkey :gorilla: gorilla :dog: dog :dog2: dog2 :poodle: poodle :wolf: wolf :fox_face: fox_face :cat: cat :cat2: cat2 :lion: lion :tiger: tiger :tiger2: tiger2 :leopard: leopard :horse: horse :racehorse: racehorse :unicorn: unicorn :deer: deer :cow: cow :ox: ox :water_buffalo: water_buffalo :cow2: cow2 :pig: pig :pig2: pig2 :boar: boar :pig_nose: pig_nose :ram: ram :sheep: sheep :goat: goat :dromedary_camel: dromedary_camel :camel: camel :elephant: elephant :rhinoceros: rhinoceros :mouse: mouse :mouse2: mouse2 :rat: rat :hamster: hamster :rabbit: rabbit :rabbit2: rabbit2 :chipmunk: chipmunk :bat: bat :bear: bear :koala: koala :panda_face: panda_face :feet: feet paw_prints ","date":"2019-10-01","objectID":"/emoji-support/:3:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#哺乳动物"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r鸟类 图标 代码 图标 代码 :turkey: turkey :chicken: chicken :rooster: rooster :hatching_chick: hatching_chick :baby_chick: baby_chick :hatched_chick: hatched_chick :bird: bird :penguin: penguin :dove: dove :eagle: eagle :duck: duck :owl: owl ","date":"2019-10-01","objectID":"/emoji-support/:3:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#鸟类"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r两栖动物 icon code icon code :frog: frog ","date":"2019-10-01","objectID":"/emoji-support/:3:3","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#两栖动物"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r爬虫类 图标 代码 图标 代码 :crocodile: crocodile :turtle: turtle :lizard: lizard :snake: snake :dragon_face: dragon_face :dragon: dragon ","date":"2019-10-01","objectID":"/emoji-support/:3:4","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#爬虫类"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r海洋动物 图标 代码 图标 代码 :whale: whale :whale2: whale2 :dolphin: dolphin flipper :fish: fish :tropical_fish: tropical_fish :blowfish: blowfish :shark: shark :octopus: octopus :shell: shell ","date":"2019-10-01","objectID":"/emoji-support/:3:5","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#海洋动物"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r虫类 图标 代码 图标 代码 :snail: snail :butterfly: butterfly :bug: bug :ant: ant :bee: bee honeybee :beetle: beetle :spider: spider :spider_web: spider_web :scorpion: scorpion ","date":"2019-10-01","objectID":"/emoji-support/:3:6","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#虫类"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r花类植物 图标 代码 图标 代码 :bouquet: bouquet :cherry_blossom: cherry_blossom :white_flower: white_flower :rosette: rosette :rose: rose :wilted_flower: wilted_flower :hibiscus: hibiscus :sunflower: sunflower :blossom: blossom :tulip: tulip ","date":"2019-10-01","objectID":"/emoji-support/:3:7","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#花类植物"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r其它植物 图标 代码 图标 代码 :seedling: seedling :evergreen_tree: evergreen_tree :deciduous_tree: deciduous_tree :palm_tree: palm_tree :cactus: cactus :ear_of_rice: ear_of_rice :herb: herb :shamrock: shamrock :four_leaf_clover: four_leaf_clover :maple_leaf: maple_leaf :fallen_leaf: fallen_leaf :leaves: leaves ","date":"2019-10-01","objectID":"/emoji-support/:3:8","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#其它植物"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r食物与饮料","date":"2019-10-01","objectID":"/emoji-support/:4:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#食物与饮料"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r水果 图标 代码 图标 代码 :grapes: grapes :melon: melon :watermelon: watermelon :mandarin: mandarin orange tangerine :lemon: lemon :banana: banana :pineapple: pineapple :apple: apple :green_apple: green_apple :pear: pear :peach: peach :cherries: cherries :strawberry: strawberry :kiwi_fruit: kiwi_fruit :tomato: tomato ","date":"2019-10-01","objectID":"/emoji-support/:4:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#水果"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r蔬菜 图标 代码 图标 代码 :avocado: avocado :eggplant: eggplant :potato: potato :carrot: carrot :corn: corn :hot_pepper: hot_pepper :cucumber: cucumber :mushroom: mushroom :peanuts: peanuts :chestnut: chestnut ","date":"2019-10-01","objectID":"/emoji-support/:4:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#蔬菜"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r快餐 图标 代码 图标 代码 :bread: bread :croissant: croissant :baguette_bread: baguette_bread :pancakes: pancakes :cheese: cheese :meat_on_bone: meat_on_bone :poultry_leg: poultry_leg :bacon: bacon :hamburger: hamburger :fries: fries :pizza: pizza :hotdog: hotdog :taco: taco :burrito: burrito :stuffed_flatbread: stuffed_flatbread :egg: egg :fried_egg: fried_egg :shallow_pan_of_food: shallow_pan_of_food :stew: stew :green_salad: green_salad :popcorn: popcorn ","date":"2019-10-01","objectID":"/emoji-support/:4:3","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#快餐"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r亚洲食物 图标 代码 图标 代码 :bento: bento :rice_cracker: rice_cracker :rice_ball: rice_ball :rice: rice :curry: curry :ramen: ramen :spaghetti: spaghetti :sweet_potato: sweet_potato :oden: oden :sushi: sushi :fried_shrimp: fried_shrimp :fish_cake: fish_cake :dango: dango ","date":"2019-10-01","objectID":"/emoji-support/:4:4","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#亚洲食物"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r海鲜 图标 代码 图标 代码 :crab: crab :shrimp: shrimp :squid: squid ","date":"2019-10-01","objectID":"/emoji-support/:4:5","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#海鲜"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r甜点 图标 代码 图标 代码 :icecream: icecream :shaved_ice: shaved_ice :ice_cream: ice_cream :doughnut: doughnut :cookie: cookie :birthday: birthday :cake: cake :chocolate_bar: chocolate_bar :candy: candy :lollipop: lollipop :custard: custard :honey_pot: honey_pot ","date":"2019-10-01","objectID":"/emoji-support/:4:6","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#甜点"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r饮料 图标 代码 图标 代码 :baby_bottle: baby_bottle :milk_glass: milk_glass :coffee: coffee :tea: tea :sake: sake :champagne: champagne :wine_glass: wine_glass :cocktail: cocktail :tropical_drink: tropical_drink :beer: beer :beers: beers :clinking_glasses: clinking_glasses :tumbler_glass: tumbler_glass ","date":"2019-10-01","objectID":"/emoji-support/:4:7","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#饮料"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r餐具 图标 代码 图标 代码 :plate_with_cutlery: plate_with_cutlery :fork_and_knife: fork_and_knife :spoon: spoon :hocho: hocho knife :amphora: amphora ","date":"2019-10-01","objectID":"/emoji-support/:4:8","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#餐具"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r旅游与地理","date":"2019-10-01","objectID":"/emoji-support/:5:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#旅游与地理"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r地图 图标 代码 图标 代码 :earth_africa: earth_africa :earth_americas: earth_americas :earth_asia: earth_asia :globe_with_meridians: globe_with_meridians :world_map: world_map :japan: japan ","date":"2019-10-01","objectID":"/emoji-support/:5:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#地图"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r地理现象 图标 代码 图标 代码 :mountain_snow: mountain_snow :mountain: mountain :volcano: volcano :mount_fuji: mount_fuji :camping: camping :beach_umbrella: beach_umbrella :desert: desert :desert_island: desert_island :national_park: national_park ","date":"2019-10-01","objectID":"/emoji-support/:5:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#地理现象"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r建筑物 图标 代码 图标 代码 :stadium: stadium :classical_building: classical_building :building_construction: building_construction :houses: houses :derelict_house: derelict_house :house: house :house_with_garden: house_with_garden :office: office :post_office: post_office :european_post_office: european_post_office :hospital: hospital :bank: bank :hotel: hotel :love_hotel: love_hotel :convenience_store: convenience_store :school: school :department_store: department_store :factory: factory :japanese_castle: japanese_castle :european_castle: european_castle :wedding: wedding :tokyo_tower: tokyo_tower :statue_of_liberty: statue_of_liberty ","date":"2019-10-01","objectID":"/emoji-support/:5:3","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#建筑物"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r宗教建筑 图标 代码 图标 代码 :church: church :mosque: mosque :synagogue: synagogue :shinto_shrine: shinto_shrine :kaaba: kaaba ","date":"2019-10-01","objectID":"/emoji-support/:5:4","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#宗教建筑"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r其它地点 图标 代码 图标 代码 :fountain: fountain :tent: tent :foggy: foggy :night_with_stars: night_with_stars :cityscape: cityscape :sunrise_over_mountains: sunrise_over_mountains :sunrise: sunrise :city_sunset: city_sunset :city_sunrise: city_sunrise :bridge_at_night: bridge_at_night :hotsprings: hotsprings :carousel_horse: carousel_horse :ferris_wheel: ferris_wheel :roller_coaster: roller_coaster :barber: barber :circus_tent: circus_tent ","date":"2019-10-01","objectID":"/emoji-support/:5:5","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#其它地点"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r陆路运输 图标 代码 图标 代码 :steam_locomotive: steam_locomotive :railway_car: railway_car :bullettrain_side: bullettrain_side :bullettrain_front: bullettrain_front :train2: train2 :metro: metro :light_rail: light_rail :station: station :tram: tram :monorail: monorail :mountain_railway: mountain_railway :train: train :bus: bus :oncoming_bus: oncoming_bus :trolleybus: trolleybus :minibus: minibus :ambulance: ambulance :fire_engine: fire_engine :police_car: police_car :oncoming_police_car: oncoming_police_car :taxi: taxi :oncoming_taxi: oncoming_taxi :car: car red_car :oncoming_automobile: oncoming_automobile :blue_car: blue_car :truck: truck :articulated_lorry: articulated_lorry :tractor: tractor :racing_car: racing_car :motorcycle: motorcycle :motor_scooter: motor_scooter :bike: bike :kick_scooter: kick_scooter :busstop: busstop :motorway: motorway :railway_track: railway_track :oil_drum: oil_drum :fuelpump: fuelpump :rotating_light: rotating_light :traffic_light: traffic_light :vertical_traffic_light: vertical_traffic_light :stop_sign: stop_sign :construction: construction ","date":"2019-10-01","objectID":"/emoji-support/:5:6","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#陆路运输"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r水路运输 图标 代码 图标 代码 :anchor: anchor :boat: boat sailboat :canoe: canoe :speedboat: speedboat :passenger_ship: passenger_ship :ferry: ferry :motor_boat: motor_boat :ship: ship ","date":"2019-10-01","objectID":"/emoji-support/:5:7","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#水路运输"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r空中运输 图标 代码 图标 代码 :airplane: airplane :small_airplane: small_airplane :flight_departure: flight_departure :flight_arrival: flight_arrival :seat: seat :helicopter: helicopter :suspension_railway: suspension_railway :mountain_cableway: mountain_cableway :aerial_tramway: aerial_tramway :artificial_satellite: artificial_satellite :rocket: rocket ","date":"2019-10-01","objectID":"/emoji-support/:5:8","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#空中运输"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r旅馆 icon code icon code :bellhop_bell: bellhop_bell ","date":"2019-10-01","objectID":"/emoji-support/:5:9","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#旅馆"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r时间 图标 代码 图标 代码 :hourglass: hourglass :hourglass_flowing_sand: hourglass_flowing_sand :watch: watch :alarm_clock: alarm_clock :stopwatch: stopwatch :timer_clock: timer_clock :mantelpiece_clock: mantelpiece_clock :clock12: clock12 :clock1230: clock1230 :clock1: clock1 :clock130: clock130 :clock2: clock2 :clock230: clock230 :clock3: clock3 :clock330: clock330 :clock4: clock4 :clock430: clock430 :clock5: clock5 :clock530: clock530 :clock6: clock6 :clock630: clock630 :clock7: clock7 :clock730: clock730 :clock8: clock8 :clock830: clock830 :clock9: clock9 :clock930: clock930 :clock10: clock10 :clock1030: clock1030 :clock11: clock11 :clock1130: clock1130 ","date":"2019-10-01","objectID":"/emoji-support/:5:10","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#时间"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r天空与天气 图标 代码 图标 代码 :new_moon: new_moon :waxing_crescent_moon: waxing_crescent_moon :first_quarter_moon: first_quarter_moon :moon: moon waxing_gibbous_moon :full_moon: full_moon :waning_gibbous_moon: waning_gibbous_moon :last_quarter_moon: last_quarter_moon :waning_crescent_moon: waning_crescent_moon :crescent_moon: crescent_moon :new_moon_with_face: new_moon_with_face :first_quarter_moon_with_face: first_quarter_moon_with_face :last_quarter_moon_with_face: last_quarter_moon_with_face :thermometer: thermometer :sunny: sunny :full_moon_with_face: full_moon_with_face :sun_with_face: sun_with_face :star: star :star2: star2 :stars: stars :milky_way: milky_way :cloud: cloud :partly_sunny: partly_sunny :cloud_with_lightning_and_rain: cloud_with_lightning_and_rain :sun_behind_small_cloud: sun_behind_small_cloud :sun_behind_large_cloud: sun_behind_large_cloud :sun_behind_rain_cloud: sun_behind_rain_cloud :cloud_with_rain: cloud_with_rain :cloud_with_snow: cloud_with_snow :cloud_with_lightning: cloud_with_lightning :tornado: tornado :fog: fog :wind_face: wind_face :cyclone: cyclone :rainbow: rainbow :closed_umbrella: closed_umbrella :open_umbrella: open_umbrella :umbrella: umbrella :parasol_on_ground: parasol_on_ground :zap: zap :snowflake: snowflake :snowman_with_snow: snowman_with_snow :snowman: snowman :comet: comet :fire: fire :droplet: droplet :ocean: ocean ","date":"2019-10-01","objectID":"/emoji-support/:5:11","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#天空与天气"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r活动","date":"2019-10-01","objectID":"/emoji-support/:6:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#活动"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r事件 图标 代码 图标 代码 :jack_o_lantern: jack_o_lantern :christmas_tree: christmas_tree :fireworks: fireworks :sparkler: sparkler :sparkles: sparkles :balloon: balloon :tada: tada :confetti_ball: confetti_ball :tanabata_tree: tanabata_tree :bamboo: bamboo :dolls: dolls :flags: flags :wind_chime: wind_chime :rice_scene: rice_scene :ribbon: ribbon :gift: gift :reminder_ribbon: reminder_ribbon :tickets: tickets :ticket: ticket ","date":"2019-10-01","objectID":"/emoji-support/:6:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#事件"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r奖杯与奖牌 图标 代码 图标 代码 :medal_military: medal_military :trophy: trophy :medal_sports: medal_sports :1st_place_medal: 1st_place_medal :2nd_place_medal: 2nd_place_medal :3rd_place_medal: 3rd_place_medal ","date":"2019-10-01","objectID":"/emoji-support/:6:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#奖杯与奖牌"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r体育运动 图标 代码 图标 代码 :soccer: soccer :baseball: baseball :basketball: basketball :volleyball: volleyball :football: football :rugby_football: rugby_football :tennis: tennis :bowling: bowling :cricket: cricket :field_hockey: field_hockey :ice_hockey: ice_hockey :ping_pong: ping_pong :badminton: badminton :boxing_glove: boxing_glove :martial_arts_uniform: martial_arts_uniform :goal_net: goal_net :golf: golf :ice_skate: ice_skate :fishing_pole_and_fish: fishing_pole_and_fish :running_shirt_with_sash: running_shirt_with_sash :ski: ski ","date":"2019-10-01","objectID":"/emoji-support/:6:3","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#体育运动"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r游戏 图标 代码 图标 代码 :dart: dart :8ball: 8ball :crystal_ball: crystal_ball :video_game: video_game :joystick: joystick :slot_machine: slot_machine :game_die: game_die :spades: spades :hearts: hearts :diamonds: diamonds :clubs: clubs :black_joker: black_joker :mahjong: mahjong :flower_playing_cards: flower_playing_cards ","date":"2019-10-01","objectID":"/emoji-support/:6:4","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#游戏"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r艺术与工艺 图标 代码 图标 代码 :performing_arts: performing_arts :framed_picture: framed_picture :art: art ","date":"2019-10-01","objectID":"/emoji-support/:6:5","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#艺术与工艺"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r物品","date":"2019-10-01","objectID":"/emoji-support/:7:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#物品"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r服装 图标 代码 图标 代码 :eyeglasses: eyeglasses :dark_sunglasses: dark_sunglasses :necktie: necktie :shirt: shirt tshirt :jeans: jeans :dress: dress :kimono: kimono :bikini: bikini :womans_clothes: womans_clothes :purse: purse :handbag: handbag :pouch: pouch :shopping: shopping :school_satchel: school_satchel :mans_shoe: mans_shoe shoe :athletic_shoe: athletic_shoe :high_heel: high_heel :sandal: sandal :boot: boot :crown: crown :womans_hat: womans_hat :tophat: tophat :mortar_board: mortar_board :rescue_worker_helmet: rescue_worker_helmet :prayer_beads: prayer_beads :lipstick: lipstick :ring: ring :gem: gem ","date":"2019-10-01","objectID":"/emoji-support/:7:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#服装"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r声音 图标 代码 图标 代码 :mute: mute :speaker: speaker :sound: sound :loud_sound: loud_sound :loudspeaker: loudspeaker :mega: mega :postal_horn: postal_horn :bell: bell :no_bell: no_bell ","date":"2019-10-01","objectID":"/emoji-support/:7:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#声音"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r音乐 图标 代码 图标 代码 :musical_score: musical_score :musical_note: musical_note :notes: notes :studio_microphone: studio_microphone :level_slider: level_slider :control_knobs: control_knobs :microphone: microphone :headphones: headphones :radio: radio ","date":"2019-10-01","objectID":"/emoji-support/:7:3","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#音乐"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r乐器 图标 代码 图标 代码 :saxophone: saxophone :guitar: guitar :musical_keyboard: musical_keyboard :trumpet: trumpet :violin: violin :drum: drum ","date":"2019-10-01","objectID":"/emoji-support/:7:4","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#乐器"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r电话 图标 代码 图标 代码 :iphone: iphone :calling: calling :phone: phone telephone :telephone_receiver: telephone_receiver :pager: pager :fax: fax ","date":"2019-10-01","objectID":"/emoji-support/:7:5","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#电话"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r电脑 图标 代码 图标 代码 :battery: battery :electric_plug: electric_plug :computer: computer :desktop_computer: desktop_computer :printer: printer :keyboard: keyboard :computer_mouse: computer_mouse :trackball: trackball :minidisc: minidisc :floppy_disk: floppy_disk :cd: cd :dvd: dvd ","date":"2019-10-01","objectID":"/emoji-support/:7:6","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#电脑"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r灯光与影像 图标 代码 图标 代码 :movie_camera: movie_camera :film_strip: film_strip :film_projector: film_projector :clapper: clapper :tv: tv :camera: camera :camera_flash: camera_flash :video_camera: video_camera :vhs: vhs :mag: mag :mag_right: mag_right :candle: candle :bulb: bulb :flashlight: flashlight :izakaya_lantern: izakaya_lantern lantern ","date":"2019-10-01","objectID":"/emoji-support/:7:7","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#灯光与影像"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r书与纸张 图标 代码 图标 代码 :notebook_with_decorative_cover: notebook_with_decorative_cover :closed_book: closed_book :book: book open_book :green_book: green_book :blue_book: blue_book :orange_book: orange_book :books: books :notebook: notebook :ledger: ledger :page_with_curl: page_with_curl :scroll: scroll :page_facing_up: page_facing_up :newspaper: newspaper :newspaper_roll: newspaper_roll :bookmark_tabs: bookmark_tabs :bookmark: bookmark :label: label ","date":"2019-10-01","objectID":"/emoji-support/:7:8","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#书与纸张"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r钱 图标 代码 图标 代码 :moneybag: moneybag :yen: yen :dollar: dollar :euro: euro :pound: pound :money_with_wings: money_with_wings :credit_card: credit_card :chart: chart ","date":"2019-10-01","objectID":"/emoji-support/:7:9","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#钱"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r邮件 图标 代码 图标 代码 :email: email envelope :e-mail: :e-mail: :incoming_envelope: incoming_envelope :envelope_with_arrow: envelope_with_arrow :outbox_tray: outbox_tray :inbox_tray: inbox_tray :package: package :mailbox: mailbox :mailbox_closed: mailbox_closed :mailbox_with_mail: mailbox_with_mail :mailbox_with_no_mail: mailbox_with_no_mail :postbox: postbox :ballot_box: ballot_box ","date":"2019-10-01","objectID":"/emoji-support/:7:10","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#邮件"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r书写 图标 代码 图标 代码 :pencil2: pencil2 :black_nib: black_nib :fountain_pen: fountain_pen :pen: pen :paintbrush: paintbrush :crayon: crayon :memo: memo pencil ","date":"2019-10-01","objectID":"/emoji-support/:7:11","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#书写"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r办公 图标 代码 图标 代码 :briefcase: briefcase :file_folder: file_folder :open_file_folder: open_file_folder :card_index_dividers: card_index_dividers :date: date :calendar: calendar :spiral_notepad: spiral_notepad :spiral_calendar: spiral_calendar :card_index: card_index :chart_with_upwards_trend: chart_with_upwards_trend :chart_with_downwards_trend: chart_with_downwards_trend :bar_chart: bar_chart :clipboard: clipboard :pushpin: pushpin :round_pushpin: round_pushpin :paperclip: paperclip :paperclips: paperclips :straight_ruler: straight_ruler :triangular_ruler: triangular_ruler :scissors: scissors :card_file_box: card_file_box :file_cabinet: file_cabinet :wastebasket: wastebasket ","date":"2019-10-01","objectID":"/emoji-support/:7:12","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#办公"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r锁 图标 代码 图标 代码 :lock: lock :unlock: unlock :lock_with_ink_pen: lock_with_ink_pen :closed_lock_with_key: closed_lock_with_key :key: key :old_key: old_key ","date":"2019-10-01","objectID":"/emoji-support/:7:13","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#锁"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r工具 图标 代码 图标 代码 :hammer: hammer :pick: pick :hammer_and_pick: hammer_and_pick :hammer_and_wrench: hammer_and_wrench :dagger: dagger :crossed_swords: crossed_swords :gun: gun :bow_and_arrow: bow_and_arrow :shield: shield :wrench: wrench :nut_and_bolt: nut_and_bolt :gear: gear :clamp: clamp :balance_scale: balance_scale :link: link :chains: chains ","date":"2019-10-01","objectID":"/emoji-support/:7:14","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#工具"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r科学 图标 代码 图标 代码 :alembic: alembic :microscope: microscope :telescope: telescope :satellite: satellite ","date":"2019-10-01","objectID":"/emoji-support/:7:15","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#科学"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r医疗 图标 代码 图标 代码 :syringe: syringe :pill: pill ","date":"2019-10-01","objectID":"/emoji-support/:7:16","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#医疗"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r生活用品 图标 代码 图标 代码 :door: door :bed: bed :couch_and_lamp: couch_and_lamp :toilet: toilet :shower: shower :bathtub: bathtub :shopping_cart: shopping_cart ","date":"2019-10-01","objectID":"/emoji-support/:7:17","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#生活用品"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r其它物品 图标 代码 图标 代码 :smoking: smoking :coffin: coffin :funeral_urn: funeral_urn :moyai: moyai ","date":"2019-10-01","objectID":"/emoji-support/:7:18","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#其它物品"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r符号","date":"2019-10-01","objectID":"/emoji-support/:8:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#符号"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r交通标识 图标 代码 图标 代码 :atm: atm :put_litter_in_its_place: put_litter_in_its_place :potable_water: potable_water :wheelchair: wheelchair :mens: mens :womens: womens :restroom: restroom :baby_symbol: baby_symbol :wc: wc :passport_control: passport_control :customs: customs :baggage_claim: baggage_claim :left_luggage: left_luggage ","date":"2019-10-01","objectID":"/emoji-support/:8:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#交通标识"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r警告 图标 代码 图标 代码 :warning: warning :children_crossing: children_crossing :no_entry: no_entry :no_entry_sign: no_entry_sign :no_bicycles: no_bicycles :no_smoking: no_smoking :do_not_litter: do_not_litter :non-potable_water: :non-potable_water: :no_pedestrians: no_pedestrians :no_mobile_phones: no_mobile_phones :underage: underage :radioactive: radioactive :biohazard: biohazard ","date":"2019-10-01","objectID":"/emoji-support/:8:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#警告"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r箭头 图标 代码 图标 代码 :arrow_up: arrow_up :arrow_upper_right: arrow_upper_right :arrow_right: arrow_right :arrow_lower_right: arrow_lower_right :arrow_down: arrow_down :arrow_lower_left: arrow_lower_left :arrow_left: arrow_left :arrow_upper_left: arrow_upper_left :arrow_up_down: arrow_up_down :left_right_arrow: left_right_arrow :leftwards_arrow_with_hook: leftwards_arrow_with_hook :arrow_right_hook: arrow_right_hook :arrow_heading_up: arrow_heading_up :arrow_heading_down: arrow_heading_down :arrows_clockwise: arrows_clockwise :arrows_counterclockwise: arrows_counterclockwise :back: back :end: end :on: on :soon: soon :top: top ","date":"2019-10-01","objectID":"/emoji-support/:8:3","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#箭头"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r宗教 图标 代码 图标 代码 :place_of_worship: place_of_worship :atom_symbol: atom_symbol :om: om :star_of_david: star_of_david :wheel_of_dharma: wheel_of_dharma :yin_yang: yin_yang :latin_cross: latin_cross :orthodox_cross: orthodox_cross :star_and_crescent: star_and_crescent :peace_symbol: peace_symbol :menorah: menorah :six_pointed_star: six_pointed_star ","date":"2019-10-01","objectID":"/emoji-support/:8:4","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#宗教"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r生肖 图标 代码 图标 代码 :aries: aries :taurus: taurus :gemini: gemini :cancer: cancer :leo: leo :virgo: virgo :libra: libra :scorpius: scorpius :sagittarius: sagittarius :capricorn: capricorn :aquarius: aquarius :pisces: pisces :ophiuchus: ophiuchus ","date":"2019-10-01","objectID":"/emoji-support/:8:5","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#生肖"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r影像符号 图标 代码 图标 代码 :twisted_rightwards_arrows: twisted_rightwards_arrows :repeat: repeat :repeat_one: repeat_one :arrow_forward: arrow_forward :fast_forward: fast_forward :next_track_button: next_track_button :play_or_pause_button: play_or_pause_button :arrow_backward: arrow_backward :rewind: rewind :previous_track_button: previous_track_button :arrow_up_small: arrow_up_small :arrow_double_up: arrow_double_up :arrow_down_small: arrow_down_small :arrow_double_down: arrow_double_down :pause_button: pause_button :stop_button: stop_button :record_button: record_button :cinema: cinema :low_brightness: low_brightness :high_brightness: high_brightness :signal_strength: signal_strength :vibration_mode: vibration_mode :mobile_phone_off: mobile_phone_off ","date":"2019-10-01","objectID":"/emoji-support/:8:6","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#影像符号"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r数学 图标 代码 图标 代码 :heavy_multiplication_x: heavy_multiplication_x :heavy_plus_sign: heavy_plus_sign :heavy_minus_sign: heavy_minus_sign :heavy_division_sign: heavy_division_sign ","date":"2019-10-01","objectID":"/emoji-support/:8:7","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#数学"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r标点符号 图标 代码 图标 代码 :bangbang: bangbang :interrobang: interrobang :question: question :grey_question: grey_question :grey_exclamation: grey_exclamation :exclamation: exclamation heavy_exclamation_mark :wavy_dash: wavy_dash ","date":"2019-10-01","objectID":"/emoji-support/:8:8","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#标点符号"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r货币 图标 代码 图标 代码 :currency_exchange: currency_exchange :heavy_dollar_sign: heavy_dollar_sign ","date":"2019-10-01","objectID":"/emoji-support/:8:9","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#货币"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r按键符号 图标 代码 图标 代码 :hash: hash :asterisk: asterisk :zero: zero :one: one :two: two :three: three :four: four :five: five :six: six :seven: seven :eight: eight :nine: nine :keycap_ten: keycap_ten ","date":"2019-10-01","objectID":"/emoji-support/:8:10","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#按键符号"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r字母符号 图标 代码 图标 代码 :capital_abcd: capital_abcd :abcd: abcd :1234: 1234 :symbols: symbols :abc: abc :a: a :ab: ab :b: b :cl: cl :cool: cool :free: free :information_source: information_source :id: id :m: m :new: new :ng: ng :o2: o2 :ok: ok :parking: parking :sos: sos :up: up :vs: vs :koko: koko :sa: sa :u6708: u6708 :u6709: u6709 :u6307: u6307 :ideograph_advantage: ideograph_advantage :u5272: u5272 :u7121: u7121 :u7981: u7981 :accept: accept :u7533: u7533 :u5408: u5408 :u7a7a: u7a7a :congratulations: congratulations :secret: secret :u55b6: u55b6 :u6e80: u6e80 ","date":"2019-10-01","objectID":"/emoji-support/:8:11","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#字母符号"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r几何符号 图标 代码 图标 代码 :red_circle: red_circle :large_blue_circle: large_blue_circle :black_circle: black_circle :white_circle: white_circle :black_large_square: black_large_square :white_large_square: white_large_square :black_medium_square: black_medium_square :white_medium_square: white_medium_square :black_medium_small_square: black_medium_small_square :white_medium_small_square: white_medium_small_square :black_small_square: black_small_square :white_small_square: white_small_square :large_orange_diamond: large_orange_diamond :large_blue_diamond: large_blue_diamond :small_orange_diamond: small_orange_diamond :small_blue_diamond: small_blue_diamond :small_red_triangle: small_red_triangle :small_red_triangle_down: small_red_triangle_down :diamond_shape_with_a_dot_inside: diamond_shape_with_a_dot_inside :radio_button: radio_button :white_square_button: white_square_button :black_square_button: black_square_button ","date":"2019-10-01","objectID":"/emoji-support/:8:12","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#几何符号"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r其它符合 图标 代码 图标 代码 :recycle: recycle :fleur_de_lis: fleur_de_lis :trident: trident :name_badge: name_badge :beginner: beginner :o: o :white_check_mark: white_check_mark :ballot_box_with_check: ballot_box_with_check :heavy_check_mark: heavy_check_mark :x: x :negative_squared_cross_mark: negative_squared_cross_mark :curly_loop: curly_loop :loop: loop :part_alternation_mark: part_alternation_mark :eight_spoked_asterisk: eight_spoked_asterisk :eight_pointed_black_star: eight_pointed_black_star :sparkle: sparkle :copyright: copyright :registered: registered :tm: tm ","date":"2019-10-01","objectID":"/emoji-support/:8:13","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#其它符合"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r旗帜","date":"2019-10-01","objectID":"/emoji-support/:9:0","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#旗帜"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r常用旗帜 图标 代码 图标 代码 :checkered_flag: checkered_flag :triangular_flag_on_post: triangular_flag_on_post :crossed_flags: crossed_flags :black_flag: black_flag :white_flag: white_flag :rainbow_flag: rainbow_flag ","date":"2019-10-01","objectID":"/emoji-support/:9:1","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#常用旗帜"},{"categories":["Hugo安装\u0026基本配置"],"content":"\r国家和地区旗帜 图标 代码 图标 代码 :andorra: andorra :united_arab_emirates: united_arab_emirates :afghanistan: afghanistan :antigua_barbuda: antigua_barbuda :anguilla: anguilla :albania: albania :armenia: armenia :angola: angola :antarctica: antarctica :argentina: argentina :american_samoa: american_samoa :austria: austria :australia: australia :aruba: aruba :aland_islands: aland_islands :azerbaijan: azerbaijan :bosnia_herzegovina: bosnia_herzegovina :barbados: barbados :bangladesh: bangladesh :belgium: belgium :burkina_faso: burkina_faso :bulgaria: bulgaria :bahrain: bahrain :burundi: burundi :benin: benin :st_barthelemy: st_barthelemy :bermuda: bermuda :brunei: brunei :bolivia: bolivia :caribbean_netherlands: caribbean_netherlands :brazil: brazil :bahamas: bahamas :bhutan: bhutan :botswana: botswana :belarus: belarus :belize: belize :canada: canada :cocos_islands: cocos_islands :congo_kinshasa: congo_kinshasa :central_african_republic: central_african_republic :congo_brazzaville: congo_brazzaville :switzerland: switzerland :cote_divoire: cote_divoire :cook_islands: cook_islands :chile: chile :cameroon: cameroon :cn: cn :colombia: colombia :costa_rica: costa_rica :cuba: cuba :cape_verde: cape_verde :curacao: curacao :christmas_island: christmas_island :cyprus: cyprus :czech_republic: czech_republic :de: de :djibouti: djibouti :denmark: denmark :dominica: dominica :dominican_republic: dominican_republic :algeria: algeria :ecuador: ecuador :estonia: estonia :egypt: egypt :western_sahara: western_sahara :eritrea: eritrea :es: es :ethiopia: ethiopia :eu: eu european_union :finland: finland :fiji: fiji :falkland_islands: falkland_islands :micronesia: micronesia :faroe_islands: faroe_islands :fr: fr :gabon: gabon :gb: gb uk :grenada: grenada :georgia: georgia :french_guiana: french_guiana :guernsey: guernsey :ghana: ghana :gibraltar: gibraltar :greenland: greenland :gambia: gambia :guinea: guinea :guadeloupe: guadeloupe :equatorial_guinea: equatorial_guinea :greece: greece :south_georgia_south_sandwich_islands: south_georgia_south_sandwich_islands :guatemala: guatemala :guam: guam :guinea_bissau: guinea_bissau :guyana: guyana :hong_kong: hong_kong :honduras: honduras :croatia: croatia :haiti: haiti :hungary: hungary :canary_islands: canary_islands :indonesia: indonesia :ireland: ireland :israel: israel :isle_of_man: isle_of_man :india: india :british_indian_ocean_territory: british_indian_ocean_territory :iraq: iraq :iran: iran :iceland: iceland :it: it :jersey: jersey :jamaica: jamaica :jordan: jordan :jp: jp :kenya: kenya :kyrgyzstan: kyrgyzstan :cambodia: cambodia :kiribati: kiribati :comoros: comoros :st_kitts_nevis: st_kitts_nevis :north_korea: north_korea :kr: kr :kuwait: kuwait :cayman_islands: cayman_islands :kazakhstan: kazakhstan :laos: laos :lebanon: lebanon :st_lucia: st_lucia :liechtenstein: liechtenstein :sri_lanka: sri_lanka :liberia: liberia :lesotho: lesotho :lithuania: lithuania :luxembourg: luxembourg :latvia: latvia :libya: libya :morocco: morocco :monaco: monaco :moldova: moldova :montenegro: montenegro :madagascar: madagascar :marshall_islands: marshall_islands :macedonia: macedonia :mali: mali :myanmar: myanmar :mongolia: mongolia :macau: macau :northern_mariana_islands: northern_mariana_islands :martinique: martinique :mauritania: mauritania :montserrat: montserrat :malta: malta :mauritius: mauritius :maldives: maldives :malawi: malawi :mexico: mexico :malaysia: malaysia :mozambique: mozambique :namibia: namibia :new_caledonia: new_caledonia :niger: niger :norfolk_island: norfolk_island :nigeria: nigeria :nicaragua: nicaragua :netherlands: netherlands :norway: norway :nepal: nepal :nauru: nauru :niue: niue :new_zealand: new_zealand :oman: oman :panama: panama :peru: peru :french_polynesia: french_polynesia :papua_new_guinea: papua_new_guinea :philippines: philippines :pakistan: pakistan :poland: poland :st_pierre_miquelon: st_pierre_miquelon :pitcairn_islands: pitcairn_islands :puerto_rico: puerto_rico :palestinian_territ","date":"2019-10-01","objectID":"/emoji-support/:9:2","series":null,"tags":["emoji","Hugo"],"title":"Emoji 支持","uri":"/emoji-support/#国家和地区旗帜"},{"categories":null,"content":"\r关于网站| 个人博客，欢迎交流 ","date":"2019-08-02","objectID":"/about/:1:0","series":null,"tags":null,"title":"关于 DoIt","uri":"/about/#关于网站"},{"categories":null,"content":"\r关于作者| 关于版权\r本站所有的原创文章均受 创作共享 署名-非商业性 4.0 许可协议 / CC BY-NC 4.0 保护。 版权说明 任何个人及媒体在转载本站原创内容（包含文字、自制图像、摄影作品）时请遵守以下版权要求: 注明转载 注明来源为本站域名（akuamzhou.github.io），或转载内容所在的完整网址 本站图片，除原创作品之外，多数来自互联网。 此类图片的原版权所有者可在任何时候、以任何理由要求本站停止使用有关图片，其中包括被本站编辑（比如加注说明）过的图片， 联系方式见本站首页。 ","date":"2019-08-02","objectID":"/about/:2:0","series":null,"tags":null,"title":"关于 DoIt","uri":"/about/#关于作者"}]